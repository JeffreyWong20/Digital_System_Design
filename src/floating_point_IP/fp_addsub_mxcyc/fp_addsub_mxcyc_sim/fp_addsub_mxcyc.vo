//IP Functional Simulation Model
//VERSION_BEGIN 18.1 cbx_mgl 2018:09:12:13:10:36:SJ cbx_simgen 2018:09:12:13:04:24:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Intel disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altera_syncram 1 lut 606 mux21 192 oper_add 9 oper_mux 236 
`timescale 1 ps / 1 ps
module  fp_addsub_mxcyc
	( 
	a,
	areset,
	b,
	clk,
	en,
	opSel,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  a;
	input   areset;
	input   [31:0]  b;
	input   clk;
	input   [0:0]  en;
	input   [0:0]  opSel;
	output   [31:0]  q;

	wire  [7:0]   wire_ni0O0i_q_b;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n001i;
	reg	n001l;
	reg	n001O;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00Oi;
	reg	n00Ol;
	reg	n00OO;
	reg	n010i;
	reg	n010l;
	reg	n010O;
	reg	n011l;
	reg	n011O;
	reg	n01ii;
	reg	n01il;
	reg	n01iO;
	reg	n01li;
	reg	n01ll;
	reg	n01lO;
	reg	n01Oi;
	reg	n01Ol;
	reg	n01OO;
	reg	n0i0i;
	reg	n0i0l;
	reg	n0i0O;
	reg	n0i1i;
	reg	n0i1l;
	reg	n0i1O;
	reg	n0iii;
	reg	n0iil;
	reg	n0iiO;
	reg	n0ili;
	reg	n0ill;
	reg	n0ilO;
	reg	n0iOi;
	reg	n0iOl;
	reg	n0iOO;
	reg	n0l00i;
	reg	n0l00l;
	reg	n0l00O;
	reg	n0l01i;
	reg	n0l01l;
	reg	n0l01O;
	reg	n0l0i;
	reg	n0l0ii;
	reg	n0l0il;
	reg	n0l0iO;
	reg	n0l0l;
	reg	n0l0li;
	reg	n0l0ll;
	reg	n0l0lO;
	reg	n0l0Oi;
	reg	n0l0Ol;
	reg	n0l0OO;
	reg	n0l10i;
	reg	n0l10l;
	reg	n0l10O;
	reg	n0l1i;
	reg	n0l1ii;
	reg	n0l1il;
	reg	n0l1iO;
	reg	n0l1l;
	reg	n0l1li;
	reg	n0l1ll;
	reg	n0l1lO;
	reg	n0l1O;
	reg	n0l1Oi;
	reg	n0l1Ol;
	reg	n0l1OO;
	reg	n0li0i;
	reg	n0li0l;
	reg	n0li0O;
	reg	n0li1i;
	reg	n0li1l;
	reg	n0li1O;
	reg	n0liii;
	reg	n0liil;
	reg	n0liiO;
	reg	n0lili;
	reg	n0lill;
	reg	n0lilO;
	reg	n0liOi;
	reg	n0liOl;
	reg	n0liOO;
	reg	n0ll0i;
	reg	n0ll0l;
	reg	n0ll0O;
	reg	n0ll1i;
	reg	n0ll1l;
	reg	n0ll1O;
	reg	n0llii;
	reg	n0llil;
	reg	n0lliO;
	reg	n0llli;
	reg	n0llll;
	reg	n0lllO;
	reg	n0llOi;
	reg	n0llOl;
	reg	n0llOO;
	reg	n0lO0i;
	reg	n0lO0l;
	reg	n0lO0O;
	reg	n0lO1i;
	reg	n0lO1l;
	reg	n0lO1O;
	reg	n0lOii;
	reg	n0lOil;
	reg	n0lOiO;
	reg	n0lOli;
	reg	n0lOll;
	reg	n0lOlO;
	reg	n0lOOi;
	reg	n0lOOl;
	reg	n0lOOO;
	reg	n0O00i;
	reg	n0O00l;
	reg	n0O00O;
	reg	n0O01i;
	reg	n0O01l;
	reg	n0O01O;
	reg	n0O0ii;
	reg	n0O0il;
	reg	n0O0iO;
	reg	n0O0li;
	reg	n0O0ll;
	reg	n0O0lO;
	reg	n0O0Oi;
	reg	n0O0Ol;
	reg	n0O0OO;
	reg	n0O10i;
	reg	n0O10l;
	reg	n0O10O;
	reg	n0O11i;
	reg	n0O11l;
	reg	n0O11O;
	reg	n0O1ii;
	reg	n0O1il;
	reg	n0O1iO;
	reg	n0O1li;
	reg	n0O1ll;
	reg	n0O1lO;
	reg	n0O1Oi;
	reg	n0O1Ol;
	reg	n0O1OO;
	reg	n0Oi0i;
	reg	n0Oi0l;
	reg	n0Oi0O;
	reg	n0Oi1i;
	reg	n0Oi1l;
	reg	n0Oi1O;
	reg	n0Oiii;
	reg	n0Oiil;
	reg	n0OiiO;
	reg	n0Oili;
	reg	n0Oill;
	reg	n0OilO;
	reg	n0OiOi;
	reg	n0OiOl;
	reg	n0OiOO;
	reg	n0Ol0i;
	reg	n0Ol0l;
	reg	n0Ol0O;
	reg	n0Ol1i;
	reg	n0Ol1l;
	reg	n0Ol1O;
	reg	n0Olii;
	reg	n0Olil;
	reg	n0OliO;
	reg	n0Olli;
	reg	n0Olll;
	reg	n0OllO;
	reg	n0OlOi;
	reg	n0OlOl;
	reg	n0OlOO;
	reg	n0OO0i;
	reg	n0OO0l;
	reg	n0OO0O;
	reg	n0OO1i;
	reg	n0OO1l;
	reg	n0OO1O;
	reg	n0OOii;
	reg	n0OOil;
	reg	n0OOiO;
	reg	n0OOli;
	reg	n0OOll;
	reg	n0OOlO;
	reg	n0OOOi;
	reg	n0OOOl;
	reg	n0OOOO;
	reg	n10i;
	reg	n10l;
	reg	n11i;
	reg	n11l;
	reg	n11O;
	reg	n1ii;
	reg	n1OOO;
	reg	ni000i;
	reg	ni000l;
	reg	ni000O;
	reg	ni001i;
	reg	ni001l;
	reg	ni001O;
	reg	ni00ii;
	reg	ni00il;
	reg	ni00iO;
	reg	ni00li;
	reg	ni00ll;
	reg	ni00lO;
	reg	ni00Oi;
	reg	ni00Ol;
	reg	ni00OO;
	reg	ni010i;
	reg	ni010l;
	reg	ni010O;
	reg	ni011i;
	reg	ni011l;
	reg	ni011O;
	reg	ni01ii;
	reg	ni01il;
	reg	ni01iO;
	reg	ni01li;
	reg	ni01ll;
	reg	ni01lO;
	reg	ni01Oi;
	reg	ni01Ol;
	reg	ni01OO;
	reg	ni0i0i;
	reg	ni0i0l;
	reg	ni0i0O;
	reg	ni0i1i;
	reg	ni0i1l;
	reg	ni0i1O;
	reg	ni0iii;
	reg	ni0iil;
	reg	ni0iiO;
	reg	ni0ili;
	reg	ni0ill;
	reg	ni0ilO;
	reg	ni0iOi;
	reg	ni0iOl;
	reg	ni0iOO;
	reg	ni0l0i;
	reg	ni0l0l;
	reg	ni0l0O;
	reg	ni0l1i;
	reg	ni0l1l;
	reg	ni0l1O;
	reg	ni0lii;
	reg	ni0lil;
	reg	ni0liO;
	reg	ni0lli;
	reg	ni0lll;
	reg	ni0llO;
	reg	ni0lOi;
	reg	ni0lOl;
	reg	ni0lOO;
	reg	ni0O0l;
	reg	ni0O0O;
	reg	ni0O1i;
	reg	ni0O1l;
	reg	ni0O1O;
	reg	ni0Oii;
	reg	ni0Oil;
	reg	ni0OiO;
	reg	ni0Oli;
	reg	ni0Oll;
	reg	ni0OlO;
	reg	ni0OOi;
	reg	ni0OOl;
	reg	ni0OOO;
	reg	ni100i;
	reg	ni100l;
	reg	ni100O;
	reg	ni101i;
	reg	ni101l;
	reg	ni101O;
	reg	ni10ii;
	reg	ni10il;
	reg	ni10iO;
	reg	ni10li;
	reg	ni10ll;
	reg	ni10lO;
	reg	ni10Oi;
	reg	ni10Ol;
	reg	ni10OO;
	reg	ni110i;
	reg	ni110l;
	reg	ni110O;
	reg	ni111i;
	reg	ni111l;
	reg	ni111O;
	reg	ni11ii;
	reg	ni11il;
	reg	ni11iO;
	reg	ni11li;
	reg	ni11ll;
	reg	ni11lO;
	reg	ni11Oi;
	reg	ni11Ol;
	reg	ni11OO;
	reg	ni1i0i;
	reg	ni1i0l;
	reg	ni1i0O;
	reg	ni1i1i;
	reg	ni1i1l;
	reg	ni1i1O;
	reg	ni1iii;
	reg	ni1iil;
	reg	ni1iiO;
	reg	ni1ili;
	reg	ni1ill;
	reg	ni1ilO;
	reg	ni1iOi;
	reg	ni1iOl;
	reg	ni1iOO;
	reg	ni1l0i;
	reg	ni1l0l;
	reg	ni1l0O;
	reg	ni1l1i;
	reg	ni1l1l;
	reg	ni1l1O;
	reg	ni1lii;
	reg	ni1lil;
	reg	ni1liO;
	reg	ni1lli;
	reg	ni1lll;
	reg	ni1llO;
	reg	ni1lOi;
	reg	ni1lOl;
	reg	ni1lOO;
	reg	ni1O0i;
	reg	ni1O0l;
	reg	ni1O0O;
	reg	ni1O1i;
	reg	ni1O1l;
	reg	ni1O1O;
	reg	ni1Oii;
	reg	ni1Oil;
	reg	ni1OiO;
	reg	ni1Oli;
	reg	ni1Oll;
	reg	ni1OlO;
	reg	ni1OOi;
	reg	ni1OOl;
	reg	ni1OOO;
	reg	nii00i;
	reg	nii00l;
	reg	nii00O;
	reg	nii01i;
	reg	nii01l;
	reg	nii01O;
	reg	nii0ii;
	reg	nii0il;
	reg	nii0iO;
	reg	nii0li;
	reg	nii0ll;
	reg	nii0lO;
	reg	nii0Oi;
	reg	nii0Ol;
	reg	nii0OO;
	reg	nii10i;
	reg	nii10l;
	reg	nii10O;
	reg	nii11i;
	reg	nii11l;
	reg	nii11O;
	reg	nii1ii;
	reg	nii1il;
	reg	nii1iO;
	reg	nii1li;
	reg	nii1ll;
	reg	nii1lO;
	reg	nii1Oi;
	reg	nii1Ol;
	reg	nii1OO;
	reg	niii0i;
	reg	niii0l;
	reg	niii0O;
	reg	niii1i;
	reg	niii1l;
	reg	niii1O;
	reg	niiiii;
	reg	niiiil;
	reg	niiiiO;
	reg	niiili;
	reg	niiill;
	reg	niiilO;
	reg	niiiOi;
	reg	niiiOl;
	reg	niiiOO;
	reg	niil0i;
	reg	niil0l;
	reg	niil0O;
	reg	niil1i;
	reg	niil1l;
	reg	niil1O;
	reg	niilii;
	reg	niilil;
	reg	niiliO;
	reg	niilli;
	reg	niilll;
	reg	niillO;
	reg	niilOi;
	reg	niilOl;
	reg	niilOO;
	reg	niiO0i;
	reg	niiO0l;
	reg	niiO0O;
	reg	niiO1i;
	reg	niiO1l;
	reg	niiO1O;
	reg	niiOii;
	reg	niiOil;
	reg	niiOiO;
	reg	niiOli;
	reg	niiOll;
	reg	niiOlO;
	reg	niiOOi;
	reg	niiOOl;
	reg	niiOOO;
	reg	nil00i;
	reg	nil00l;
	reg	nil00O;
	reg	nil01i;
	reg	nil01l;
	reg	nil01O;
	reg	nil0ii;
	reg	nil0il;
	reg	nil0iO;
	reg	nil0li;
	reg	nil0ll;
	reg	nil0lO;
	reg	nil0Oi;
	reg	nil0Ol;
	reg	nil0OO;
	reg	nil10i;
	reg	nil10l;
	reg	nil10O;
	reg	nil11i;
	reg	nil11l;
	reg	nil11O;
	reg	nil1ii;
	reg	nil1il;
	reg	nil1iO;
	reg	nil1li;
	reg	nil1ll;
	reg	nil1lO;
	reg	nil1Oi;
	reg	nil1Ol;
	reg	nil1OO;
	reg	nili0i;
	reg	nili0l;
	reg	nili0O;
	reg	nili1i;
	reg	nili1l;
	reg	nili1O;
	reg	niliii;
	reg	niliil;
	reg	niliiO;
	reg	nilili;
	reg	nilill;
	reg	nililO;
	reg	niliOi;
	reg	niliOl;
	reg	niliOO;
	reg	nill0i;
	reg	nill0l;
	reg	nill0O;
	reg	nill1i;
	reg	nill1l;
	reg	nill1O;
	reg	nillii;
	reg	nillil;
	reg	nilliO;
	reg	nillli;
	reg	nillll;
	reg	nilllO;
	reg	nillOi;
	reg	nillOl;
	reg	nillOO;
	reg	nilO0i;
	reg	nilO0l;
	reg	nilO0O;
	reg	nilO1i;
	reg	nilO1l;
	reg	nilO1O;
	reg	nilOii;
	reg	nilOil;
	reg	nilOiO;
	reg	nilOli;
	reg	nilOll;
	reg	nilOlO;
	reg	nilOOi;
	reg	nilOOl;
	reg	nilOOO;
	reg	niO00i;
	reg	niO00l;
	reg	niO00O;
	reg	niO01i;
	reg	niO01l;
	reg	niO01O;
	reg	niO0ii;
	reg	niO0il;
	reg	niO0iO;
	reg	niO0li;
	reg	niO0ll;
	reg	niO0lO;
	reg	niO0Oi;
	reg	niO0Ol;
	reg	niO0OO;
	reg	niO10i;
	reg	niO10l;
	reg	niO10O;
	reg	niO11i;
	reg	niO11l;
	reg	niO11O;
	reg	niO1ii;
	reg	niO1il;
	reg	niO1iO;
	reg	niO1li;
	reg	niO1ll;
	reg	niO1lO;
	reg	niO1Oi;
	reg	niO1Ol;
	reg	niO1OO;
	reg	niOi1i;
	reg	niOi1l;
	reg	niOi1O;
	reg	nl0i0i;
	reg	nl0iii;
	reg	nl0ilO;
	reg	nl0iOi;
	reg	nl0iOl;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0l;
	reg	nl0l0O;
	reg	nl0l1i;
	reg	nl0l1l;
	reg	nl0l1O;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0liO;
	reg	nl0lli;
	reg	nl0lll;
	reg	nl0llO;
	reg	nl0lOi;
	reg	nl0lOl;
	reg	nl0lOO;
	reg	nl0O0i;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0O1i;
	reg	nl0O1l;
	reg	nl0O1O;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Oli;
	reg	nl0Oll;
	reg	nl0OlO;
	reg	nl0OOi;
	reg	nl0OOl;
	reg	nli00i;
	reg	nli01i;
	reg	nli01l;
	reg	nli01O;
	reg	nli10i;
	reg	nli10l;
	reg	nli10O;
	reg	nli11i;
	reg	nli11l;
	reg	nli11O;
	reg	nli1ii;
	reg	nli1il;
	reg	nli1iO;
	reg	nli1li;
	reg	nli1lO;
	reg	nli1Oi;
	reg	nli1Ol;
	reg	nli1OO;
	reg	nllliO;
	reg	nllllO;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nllOOO;
	reg	nlO11i;
	reg	nlOll;
	reg	nlOOi;
	reg	nlOOl;
	reg	nlOOO;
	wire	wire_n10O_ENA;
	reg	nli00l;
	reg	nlllil;
	reg	nlllOl;
	wire	wire_nlllOi_ENA;
	wire	wire_n00i_dataout;
	wire	wire_n00l_dataout;
	wire	wire_n00O_dataout;
	wire	wire_n01i_dataout;
	wire	wire_n01l_dataout;
	wire	wire_n01O_dataout;
	wire	wire_n0i_dataout;
	wire	wire_n0ii_dataout;
	wire	wire_n0il_dataout;
	wire	wire_n0iO_dataout;
	wire	wire_n0l_dataout;
	wire	wire_n0li_dataout;
	wire	wire_n0ll_dataout;
	wire	wire_n0lO_dataout;
	wire	wire_n0O_dataout;
	wire	wire_n0Oi_dataout;
	wire	wire_n0Ol_dataout;
	wire	wire_n0OO_dataout;
	wire	wire_n10ll_dataout;
	wire	wire_n10lO_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n1i_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1li_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1ll_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oi_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Ol_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_ni_dataout;
	wire	wire_ni0i_dataout;
	wire	wire_ni0l_dataout;
	wire	wire_ni0O_dataout;
	wire	wire_ni1i_dataout;
	wire	wire_ni1l_dataout;
	wire	wire_ni1O_dataout;
	wire	wire_nii_dataout;
	wire	wire_niii_dataout;
	wire	wire_niil_dataout;
	wire	wire_niiO_dataout;
	wire	wire_nil_dataout;
	wire	wire_nili_dataout;
	wire	wire_nill_dataout;
	wire	wire_nilO_dataout;
	wire	wire_niO_dataout;
	wire	wire_niOi_dataout;
	wire	wire_niOl_dataout;
	wire	wire_niOO_dataout;
	wire	wire_nl0i_dataout;
	wire	wire_nl0l_dataout;
	wire	wire_nl0O_dataout;
	wire	wire_nl1i_dataout;
	wire	wire_nl1l_dataout;
	wire	wire_nl1O_dataout;
	wire	wire_nli_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nlii_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nlil1l_dataout;
	wire	wire_nlil1O_dataout;
	wire	wire_nliO_dataout;
	wire	wire_nll_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nlli_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nlll_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nllO_dataout;
	wire	wire_nllO0O_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOii_dataout;
	wire	wire_nllOil_dataout;
	wire	wire_nllOiO_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nlO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlO1il_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOl_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOO_dataout;
	wire	wire_nO_dataout;
	wire  [11:0]   wire_n011i_o;
	wire  [9:0]   wire_n1il_o;
	wire  [33:0]   wire_nl_o;
	wire  [34:0]   wire_nl0OOO_o;
	wire  [8:0]   wire_nli00O_o;
	wire  [10:0]   wire_nli1ll_o;
	wire  [1:0]   wire_nlllOO_o;
	wire  [27:0]   wire_nlO0iO_o;
	wire  [11:0]   wire_nlOlO_o;
	wire  wire_n0l0O_o;
	wire  wire_n0lii_o;
	wire  wire_n0lil_o;
	wire  wire_n0liO_o;
	wire  wire_n0lli_o;
	wire  wire_n0lll_o;
	wire  wire_n0llO_o;
	wire  wire_n0lOi_o;
	wire  wire_n0lOl_o;
	wire  wire_n0lOO_o;
	wire  wire_n0O0i_o;
	wire  wire_n0O0l_o;
	wire  wire_n0O0O_o;
	wire  wire_n0O1i_o;
	wire  wire_n0O1l_o;
	wire  wire_n0O1O_o;
	wire  wire_n0Oii_o;
	wire  wire_n0Oil_o;
	wire  wire_n0OiO_o;
	wire  wire_n0Oli_o;
	wire  wire_n0Oll_o;
	wire  wire_n0OlO_o;
	wire  wire_n0OOi_o;
	wire  wire_n0OOl_o;
	wire  wire_n0OOO_o;
	wire  wire_ni00i_o;
	wire  wire_ni00l_o;
	wire  wire_ni00O_o;
	wire  wire_ni01i_o;
	wire  wire_ni01l_o;
	wire  wire_ni01O_o;
	wire  wire_ni0ii_o;
	wire  wire_ni0il_o;
	wire  wire_ni0iO_o;
	wire  wire_ni0li_o;
	wire  wire_ni0ll_o;
	wire  wire_ni0lO_o;
	wire  wire_ni0Oi_o;
	wire  wire_ni0Ol_o;
	wire  wire_ni0OO_o;
	wire  wire_ni10i_o;
	wire  wire_ni10l_o;
	wire  wire_ni10O_o;
	wire  wire_ni11i_o;
	wire  wire_ni11l_o;
	wire  wire_ni11O_o;
	wire  wire_ni1ii_o;
	wire  wire_ni1il_o;
	wire  wire_ni1iO_o;
	wire  wire_ni1li_o;
	wire  wire_ni1ll_o;
	wire  wire_ni1lO_o;
	wire  wire_ni1Oi_o;
	wire  wire_ni1Ol_o;
	wire  wire_ni1OO_o;
	wire  wire_nii0i_o;
	wire  wire_nii0l_o;
	wire  wire_nii0O_o;
	wire  wire_nii1i_o;
	wire  wire_nii1l_o;
	wire  wire_nii1O_o;
	wire  wire_niiii_o;
	wire  wire_niiil_o;
	wire  wire_niiiO_o;
	wire  wire_niili_o;
	wire  wire_niill_o;
	wire  wire_niilO_o;
	wire  wire_niiOi_o;
	wire  wire_niiOl_o;
	wire  wire_niiOO_o;
	wire  wire_nil0i_o;
	wire  wire_nil0l_o;
	wire  wire_nil0O_o;
	wire  wire_nil1i_o;
	wire  wire_nil1l_o;
	wire  wire_nil1O_o;
	wire  wire_nilii_o;
	wire  wire_nilil_o;
	wire  wire_niliO_o;
	wire  wire_nilli_o;
	wire  wire_nilll_o;
	wire  wire_nillO_o;
	wire  wire_nilOi_o;
	wire  wire_nilOl_o;
	wire  wire_nilOO_o;
	wire  wire_niO0i_o;
	wire  wire_niO0l_o;
	wire  wire_niO0O_o;
	wire  wire_niO1i_o;
	wire  wire_niO1l_o;
	wire  wire_niO1O_o;
	wire  wire_niOii_o;
	wire  wire_niOil_o;
	wire  wire_niOiO_o;
	wire  wire_niOli_o;
	wire  wire_niOll_o;
	wire  wire_niOlO_o;
	wire  wire_niOOi_o;
	wire  wire_niOOl_o;
	wire  wire_niOOO_o;
	wire  wire_nl000i_o;
	wire  wire_nl000l_o;
	wire  wire_nl000O_o;
	wire  wire_nl001i_o;
	wire  wire_nl001l_o;
	wire  wire_nl001O_o;
	wire  wire_nl00i_o;
	wire  wire_nl00ii_o;
	wire  wire_nl00il_o;
	wire  wire_nl00iO_o;
	wire  wire_nl00l_o;
	wire  wire_nl00li_o;
	wire  wire_nl00ll_o;
	wire  wire_nl00lO_o;
	wire  wire_nl00O_o;
	wire  wire_nl00Oi_o;
	wire  wire_nl00Ol_o;
	wire  wire_nl00OO_o;
	wire  wire_nl010i_o;
	wire  wire_nl010l_o;
	wire  wire_nl010O_o;
	wire  wire_nl011i_o;
	wire  wire_nl011l_o;
	wire  wire_nl011O_o;
	wire  wire_nl01i_o;
	wire  wire_nl01ii_o;
	wire  wire_nl01il_o;
	wire  wire_nl01iO_o;
	wire  wire_nl01l_o;
	wire  wire_nl01li_o;
	wire  wire_nl01ll_o;
	wire  wire_nl01lO_o;
	wire  wire_nl01O_o;
	wire  wire_nl01Oi_o;
	wire  wire_nl01Ol_o;
	wire  wire_nl01OO_o;
	wire  wire_nl0i0l_o;
	wire  wire_nl0i1i_o;
	wire  wire_nl0i1l_o;
	wire  wire_nl0i1O_o;
	wire  wire_nl0ii_o;
	wire  wire_nl0iil_o;
	wire  wire_nl0il_o;
	wire  wire_nl0iO_o;
	wire  wire_nl0li_o;
	wire  wire_nl0ll_o;
	wire  wire_nl0lO_o;
	wire  wire_nl0Oi_o;
	wire  wire_nl0Ol_o;
	wire  wire_nl0OO_o;
	wire  wire_nl10i_o;
	wire  wire_nl10l_o;
	wire  wire_nl10O_o;
	wire  wire_nl11i_o;
	wire  wire_nl11l_o;
	wire  wire_nl11O_o;
	wire  wire_nl1ii_o;
	wire  wire_nl1il_o;
	wire  wire_nl1iO_o;
	wire  wire_nl1li_o;
	wire  wire_nl1ll_o;
	wire  wire_nl1lO_o;
	wire  wire_nl1Oi_o;
	wire  wire_nl1Ol_o;
	wire  wire_nl1OO_o;
	wire  wire_nli0i_o;
	wire  wire_nli0l_o;
	wire  wire_nli0O_o;
	wire  wire_nli1i_o;
	wire  wire_nli1l_o;
	wire  wire_nli1O_o;
	wire  wire_nliii_o;
	wire  wire_nliil_o;
	wire  wire_nliiO_o;
	wire  wire_nlil0i_o;
	wire  wire_nlil0l_o;
	wire  wire_nlil0O_o;
	wire  wire_nlili_o;
	wire  wire_nlilii_o;
	wire  wire_nlilil_o;
	wire  wire_nliliO_o;
	wire  wire_nlill_o;
	wire  wire_nlilli_o;
	wire  wire_nlilll_o;
	wire  wire_nlillO_o;
	wire  wire_nlilO_o;
	wire  wire_nlilOi_o;
	wire  wire_nlilOl_o;
	wire  wire_nlilOO_o;
	wire  wire_nliO0i_o;
	wire  wire_nliO0l_o;
	wire  wire_nliO0O_o;
	wire  wire_nliO1i_o;
	wire  wire_nliO1l_o;
	wire  wire_nliO1O_o;
	wire  wire_nliOi_o;
	wire  wire_nliOii_o;
	wire  wire_nliOil_o;
	wire  wire_nliOiO_o;
	wire  wire_nliOl_o;
	wire  wire_nliOli_o;
	wire  wire_nliOll_o;
	wire  wire_nliOlO_o;
	wire  wire_nliOO_o;
	wire  wire_nliOOi_o;
	wire  wire_nliOOl_o;
	wire  wire_nliOOO_o;
	wire  wire_nll00i_o;
	wire  wire_nll00l_o;
	wire  wire_nll00O_o;
	wire  wire_nll01i_o;
	wire  wire_nll01l_o;
	wire  wire_nll01O_o;
	wire  wire_nll0ii_o;
	wire  wire_nll0il_o;
	wire  wire_nll0iO_o;
	wire  wire_nll0li_o;
	wire  wire_nll0ll_o;
	wire  wire_nll0lO_o;
	wire  wire_nll10i_o;
	wire  wire_nll10l_o;
	wire  wire_nll10O_o;
	wire  wire_nll11i_o;
	wire  wire_nll11l_o;
	wire  wire_nll11O_o;
	wire  wire_nll1i_o;
	wire  wire_nll1ii_o;
	wire  wire_nll1il_o;
	wire  wire_nll1iO_o;
	wire  wire_nll1l_o;
	wire  wire_nll1li_o;
	wire  wire_nll1ll_o;
	wire  wire_nll1lO_o;
	wire  wire_nll1Oi_o;
	wire  wire_nll1Ol_o;
	wire  wire_nll1OO_o;
	wire  n0illl;
	wire  n0illO;
	wire  n0ilOi;
	wire  n0ilOl;
	wire  n0ilOO;
	wire  n0iO0i;
	wire  n0iO0l;
	wire  n0iO0O;
	wire  n0iO1i;
	wire  n0iO1l;
	wire  n0iO1O;
	wire  n0iOii;
	wire  n0iOil;
	wire  n0iOiO;
	wire  n0iOli;
	wire  n0iOll;
	wire  n0iOlO;
	wire  n0iOOi;
	wire  n0iOOl;
	wire  n0iOOO;
	wire  n0l11i;

	altera_syncram   ni0O0i
	( 
	.aclr1(areset),
	.address_a({nlllil, nli00l}),
	.address_b({wire_nlllll_dataout, wire_nlllli_dataout}),
	.clock0(clk),
	.clock1(clk),
	.clocken0(1'b1),
	.clocken1((nlllOl & en[0])),
	.data_a({wire_nili_dataout, wire_niiO_dataout, wire_niil_dataout, wire_niii_dataout, wire_ni0O_dataout, wire_ni0l_dataout, wire_ni0i_dataout, wire_ni1O_dataout}),
	.eccstatus(),
	.q_a(),
	.q_b(wire_ni0O0i_q_b),
	.wren_a(en[0]),
	.aclr0(),
	.address2_a(),
	.address2_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clocken2(),
	.clocken3(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_b()
	);
	defparam
		ni0O0i.address_aclr_a = "NONE",
		ni0O0i.address_aclr_b = "NONE",
		ni0O0i.address_reg_b = "CLOCK0",
		ni0O0i.byte_size = 0,
		ni0O0i.byteena_reg_b = "CLOCK0",
		ni0O0i.clock_enable_core_a = "USE_INPUT_CLKEN",
		ni0O0i.clock_enable_core_b = "USE_INPUT_CLKEN",
		ni0O0i.clock_enable_input_a = "NORMAL",
		ni0O0i.clock_enable_input_b = "NORMAL",
		ni0O0i.clock_enable_output_a = "NORMAL",
		ni0O0i.clock_enable_output_b = "NORMAL",
		ni0O0i.ecc_pipeline_stage_enabled = "FALSE",
		ni0O0i.enable_coherent_read = "FALSE",
		ni0O0i.enable_ecc = "FALSE",
		ni0O0i.enable_ecc_encoder_bypass = "FALSE",
		ni0O0i.enable_force_to_zero = "FALSE",
		ni0O0i.implement_in_les = "OFF",
		ni0O0i.indata_reg_b = "CLOCK0",
		ni0O0i.init_file_layout = "PORT_A",
		ni0O0i.intended_device_family = "Cyclone V",
		ni0O0i.numwords_a = 4,
		ni0O0i.numwords_b = 4,
		ni0O0i.operation_mode = "DUAL_PORT",
		ni0O0i.outdata_aclr_a = "NONE",
		ni0O0i.outdata_aclr_b = "CLEAR1",
		ni0O0i.outdata_reg_a = "UNREGISTERED",
		ni0O0i.outdata_reg_b = "CLOCK1",
		ni0O0i.outdata_sclr_a = "NONE",
		ni0O0i.outdata_sclr_b = "NONE",
		ni0O0i.power_up_uninitialized = "TRUE",
		ni0O0i.ram_block_type = "MLAB",
		ni0O0i.rdcontrol_reg_b = "CLOCK0",
		ni0O0i.read_during_write_mode_mixed_ports = "DONT_CARE",
		ni0O0i.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		ni0O0i.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		ni0O0i.width_a = 8,
		ni0O0i.width_b = 8,
		ni0O0i.width_byteena_a = 1,
		ni0O0i.width_byteena_b = 1,
		ni0O0i.width_eccencparity = 8,
		ni0O0i.width_eccstatus = 2,
		ni0O0i.widthad2_a = 1,
		ni0O0i.widthad2_b = 1,
		ni0O0i.widthad_a = 2,
		ni0O0i.widthad_b = 2,
		ni0O0i.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	initial
	begin
		n000i = 0;
		n000l = 0;
		n000O = 0;
		n001i = 0;
		n001l = 0;
		n001O = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00Oi = 0;
		n00Ol = 0;
		n00OO = 0;
		n010i = 0;
		n010l = 0;
		n010O = 0;
		n011l = 0;
		n011O = 0;
		n01ii = 0;
		n01il = 0;
		n01iO = 0;
		n01li = 0;
		n01ll = 0;
		n01lO = 0;
		n01Oi = 0;
		n01Ol = 0;
		n01OO = 0;
		n0i0i = 0;
		n0i0l = 0;
		n0i0O = 0;
		n0i1i = 0;
		n0i1l = 0;
		n0i1O = 0;
		n0iii = 0;
		n0iil = 0;
		n0iiO = 0;
		n0ili = 0;
		n0ill = 0;
		n0ilO = 0;
		n0iOi = 0;
		n0iOl = 0;
		n0iOO = 0;
		n0l00i = 0;
		n0l00l = 0;
		n0l00O = 0;
		n0l01i = 0;
		n0l01l = 0;
		n0l01O = 0;
		n0l0i = 0;
		n0l0ii = 0;
		n0l0il = 0;
		n0l0iO = 0;
		n0l0l = 0;
		n0l0li = 0;
		n0l0ll = 0;
		n0l0lO = 0;
		n0l0Oi = 0;
		n0l0Ol = 0;
		n0l0OO = 0;
		n0l10i = 0;
		n0l10l = 0;
		n0l10O = 0;
		n0l1i = 0;
		n0l1ii = 0;
		n0l1il = 0;
		n0l1iO = 0;
		n0l1l = 0;
		n0l1li = 0;
		n0l1ll = 0;
		n0l1lO = 0;
		n0l1O = 0;
		n0l1Oi = 0;
		n0l1Ol = 0;
		n0l1OO = 0;
		n0li0i = 0;
		n0li0l = 0;
		n0li0O = 0;
		n0li1i = 0;
		n0li1l = 0;
		n0li1O = 0;
		n0liii = 0;
		n0liil = 0;
		n0liiO = 0;
		n0lili = 0;
		n0lill = 0;
		n0lilO = 0;
		n0liOi = 0;
		n0liOl = 0;
		n0liOO = 0;
		n0ll0i = 0;
		n0ll0l = 0;
		n0ll0O = 0;
		n0ll1i = 0;
		n0ll1l = 0;
		n0ll1O = 0;
		n0llii = 0;
		n0llil = 0;
		n0lliO = 0;
		n0llli = 0;
		n0llll = 0;
		n0lllO = 0;
		n0llOi = 0;
		n0llOl = 0;
		n0llOO = 0;
		n0lO0i = 0;
		n0lO0l = 0;
		n0lO0O = 0;
		n0lO1i = 0;
		n0lO1l = 0;
		n0lO1O = 0;
		n0lOii = 0;
		n0lOil = 0;
		n0lOiO = 0;
		n0lOli = 0;
		n0lOll = 0;
		n0lOlO = 0;
		n0lOOi = 0;
		n0lOOl = 0;
		n0lOOO = 0;
		n0O00i = 0;
		n0O00l = 0;
		n0O00O = 0;
		n0O01i = 0;
		n0O01l = 0;
		n0O01O = 0;
		n0O0ii = 0;
		n0O0il = 0;
		n0O0iO = 0;
		n0O0li = 0;
		n0O0ll = 0;
		n0O0lO = 0;
		n0O0Oi = 0;
		n0O0Ol = 0;
		n0O0OO = 0;
		n0O10i = 0;
		n0O10l = 0;
		n0O10O = 0;
		n0O11i = 0;
		n0O11l = 0;
		n0O11O = 0;
		n0O1ii = 0;
		n0O1il = 0;
		n0O1iO = 0;
		n0O1li = 0;
		n0O1ll = 0;
		n0O1lO = 0;
		n0O1Oi = 0;
		n0O1Ol = 0;
		n0O1OO = 0;
		n0Oi0i = 0;
		n0Oi0l = 0;
		n0Oi0O = 0;
		n0Oi1i = 0;
		n0Oi1l = 0;
		n0Oi1O = 0;
		n0Oiii = 0;
		n0Oiil = 0;
		n0OiiO = 0;
		n0Oili = 0;
		n0Oill = 0;
		n0OilO = 0;
		n0OiOi = 0;
		n0OiOl = 0;
		n0OiOO = 0;
		n0Ol0i = 0;
		n0Ol0l = 0;
		n0Ol0O = 0;
		n0Ol1i = 0;
		n0Ol1l = 0;
		n0Ol1O = 0;
		n0Olii = 0;
		n0Olil = 0;
		n0OliO = 0;
		n0Olli = 0;
		n0Olll = 0;
		n0OllO = 0;
		n0OlOi = 0;
		n0OlOl = 0;
		n0OlOO = 0;
		n0OO0i = 0;
		n0OO0l = 0;
		n0OO0O = 0;
		n0OO1i = 0;
		n0OO1l = 0;
		n0OO1O = 0;
		n0OOii = 0;
		n0OOil = 0;
		n0OOiO = 0;
		n0OOli = 0;
		n0OOll = 0;
		n0OOlO = 0;
		n0OOOi = 0;
		n0OOOl = 0;
		n0OOOO = 0;
		n10i = 0;
		n10l = 0;
		n11i = 0;
		n11l = 0;
		n11O = 0;
		n1ii = 0;
		n1OOO = 0;
		ni000i = 0;
		ni000l = 0;
		ni000O = 0;
		ni001i = 0;
		ni001l = 0;
		ni001O = 0;
		ni00ii = 0;
		ni00il = 0;
		ni00iO = 0;
		ni00li = 0;
		ni00ll = 0;
		ni00lO = 0;
		ni00Oi = 0;
		ni00Ol = 0;
		ni00OO = 0;
		ni010i = 0;
		ni010l = 0;
		ni010O = 0;
		ni011i = 0;
		ni011l = 0;
		ni011O = 0;
		ni01ii = 0;
		ni01il = 0;
		ni01iO = 0;
		ni01li = 0;
		ni01ll = 0;
		ni01lO = 0;
		ni01Oi = 0;
		ni01Ol = 0;
		ni01OO = 0;
		ni0i0i = 0;
		ni0i0l = 0;
		ni0i0O = 0;
		ni0i1i = 0;
		ni0i1l = 0;
		ni0i1O = 0;
		ni0iii = 0;
		ni0iil = 0;
		ni0iiO = 0;
		ni0ili = 0;
		ni0ill = 0;
		ni0ilO = 0;
		ni0iOi = 0;
		ni0iOl = 0;
		ni0iOO = 0;
		ni0l0i = 0;
		ni0l0l = 0;
		ni0l0O = 0;
		ni0l1i = 0;
		ni0l1l = 0;
		ni0l1O = 0;
		ni0lii = 0;
		ni0lil = 0;
		ni0liO = 0;
		ni0lli = 0;
		ni0lll = 0;
		ni0llO = 0;
		ni0lOi = 0;
		ni0lOl = 0;
		ni0lOO = 0;
		ni0O0l = 0;
		ni0O0O = 0;
		ni0O1i = 0;
		ni0O1l = 0;
		ni0O1O = 0;
		ni0Oii = 0;
		ni0Oil = 0;
		ni0OiO = 0;
		ni0Oli = 0;
		ni0Oll = 0;
		ni0OlO = 0;
		ni0OOi = 0;
		ni0OOl = 0;
		ni0OOO = 0;
		ni100i = 0;
		ni100l = 0;
		ni100O = 0;
		ni101i = 0;
		ni101l = 0;
		ni101O = 0;
		ni10ii = 0;
		ni10il = 0;
		ni10iO = 0;
		ni10li = 0;
		ni10ll = 0;
		ni10lO = 0;
		ni10Oi = 0;
		ni10Ol = 0;
		ni10OO = 0;
		ni110i = 0;
		ni110l = 0;
		ni110O = 0;
		ni111i = 0;
		ni111l = 0;
		ni111O = 0;
		ni11ii = 0;
		ni11il = 0;
		ni11iO = 0;
		ni11li = 0;
		ni11ll = 0;
		ni11lO = 0;
		ni11Oi = 0;
		ni11Ol = 0;
		ni11OO = 0;
		ni1i0i = 0;
		ni1i0l = 0;
		ni1i0O = 0;
		ni1i1i = 0;
		ni1i1l = 0;
		ni1i1O = 0;
		ni1iii = 0;
		ni1iil = 0;
		ni1iiO = 0;
		ni1ili = 0;
		ni1ill = 0;
		ni1ilO = 0;
		ni1iOi = 0;
		ni1iOl = 0;
		ni1iOO = 0;
		ni1l0i = 0;
		ni1l0l = 0;
		ni1l0O = 0;
		ni1l1i = 0;
		ni1l1l = 0;
		ni1l1O = 0;
		ni1lii = 0;
		ni1lil = 0;
		ni1liO = 0;
		ni1lli = 0;
		ni1lll = 0;
		ni1llO = 0;
		ni1lOi = 0;
		ni1lOl = 0;
		ni1lOO = 0;
		ni1O0i = 0;
		ni1O0l = 0;
		ni1O0O = 0;
		ni1O1i = 0;
		ni1O1l = 0;
		ni1O1O = 0;
		ni1Oii = 0;
		ni1Oil = 0;
		ni1OiO = 0;
		ni1Oli = 0;
		ni1Oll = 0;
		ni1OlO = 0;
		ni1OOi = 0;
		ni1OOl = 0;
		ni1OOO = 0;
		nii00i = 0;
		nii00l = 0;
		nii00O = 0;
		nii01i = 0;
		nii01l = 0;
		nii01O = 0;
		nii0ii = 0;
		nii0il = 0;
		nii0iO = 0;
		nii0li = 0;
		nii0ll = 0;
		nii0lO = 0;
		nii0Oi = 0;
		nii0Ol = 0;
		nii0OO = 0;
		nii10i = 0;
		nii10l = 0;
		nii10O = 0;
		nii11i = 0;
		nii11l = 0;
		nii11O = 0;
		nii1ii = 0;
		nii1il = 0;
		nii1iO = 0;
		nii1li = 0;
		nii1ll = 0;
		nii1lO = 0;
		nii1Oi = 0;
		nii1Ol = 0;
		nii1OO = 0;
		niii0i = 0;
		niii0l = 0;
		niii0O = 0;
		niii1i = 0;
		niii1l = 0;
		niii1O = 0;
		niiiii = 0;
		niiiil = 0;
		niiiiO = 0;
		niiili = 0;
		niiill = 0;
		niiilO = 0;
		niiiOi = 0;
		niiiOl = 0;
		niiiOO = 0;
		niil0i = 0;
		niil0l = 0;
		niil0O = 0;
		niil1i = 0;
		niil1l = 0;
		niil1O = 0;
		niilii = 0;
		niilil = 0;
		niiliO = 0;
		niilli = 0;
		niilll = 0;
		niillO = 0;
		niilOi = 0;
		niilOl = 0;
		niilOO = 0;
		niiO0i = 0;
		niiO0l = 0;
		niiO0O = 0;
		niiO1i = 0;
		niiO1l = 0;
		niiO1O = 0;
		niiOii = 0;
		niiOil = 0;
		niiOiO = 0;
		niiOli = 0;
		niiOll = 0;
		niiOlO = 0;
		niiOOi = 0;
		niiOOl = 0;
		niiOOO = 0;
		nil00i = 0;
		nil00l = 0;
		nil00O = 0;
		nil01i = 0;
		nil01l = 0;
		nil01O = 0;
		nil0ii = 0;
		nil0il = 0;
		nil0iO = 0;
		nil0li = 0;
		nil0ll = 0;
		nil0lO = 0;
		nil0Oi = 0;
		nil0Ol = 0;
		nil0OO = 0;
		nil10i = 0;
		nil10l = 0;
		nil10O = 0;
		nil11i = 0;
		nil11l = 0;
		nil11O = 0;
		nil1ii = 0;
		nil1il = 0;
		nil1iO = 0;
		nil1li = 0;
		nil1ll = 0;
		nil1lO = 0;
		nil1Oi = 0;
		nil1Ol = 0;
		nil1OO = 0;
		nili0i = 0;
		nili0l = 0;
		nili0O = 0;
		nili1i = 0;
		nili1l = 0;
		nili1O = 0;
		niliii = 0;
		niliil = 0;
		niliiO = 0;
		nilili = 0;
		nilill = 0;
		nililO = 0;
		niliOi = 0;
		niliOl = 0;
		niliOO = 0;
		nill0i = 0;
		nill0l = 0;
		nill0O = 0;
		nill1i = 0;
		nill1l = 0;
		nill1O = 0;
		nillii = 0;
		nillil = 0;
		nilliO = 0;
		nillli = 0;
		nillll = 0;
		nilllO = 0;
		nillOi = 0;
		nillOl = 0;
		nillOO = 0;
		nilO0i = 0;
		nilO0l = 0;
		nilO0O = 0;
		nilO1i = 0;
		nilO1l = 0;
		nilO1O = 0;
		nilOii = 0;
		nilOil = 0;
		nilOiO = 0;
		nilOli = 0;
		nilOll = 0;
		nilOlO = 0;
		nilOOi = 0;
		nilOOl = 0;
		nilOOO = 0;
		niO00i = 0;
		niO00l = 0;
		niO00O = 0;
		niO01i = 0;
		niO01l = 0;
		niO01O = 0;
		niO0ii = 0;
		niO0il = 0;
		niO0iO = 0;
		niO0li = 0;
		niO0ll = 0;
		niO0lO = 0;
		niO0Oi = 0;
		niO0Ol = 0;
		niO0OO = 0;
		niO10i = 0;
		niO10l = 0;
		niO10O = 0;
		niO11i = 0;
		niO11l = 0;
		niO11O = 0;
		niO1ii = 0;
		niO1il = 0;
		niO1iO = 0;
		niO1li = 0;
		niO1ll = 0;
		niO1lO = 0;
		niO1Oi = 0;
		niO1Ol = 0;
		niO1OO = 0;
		niOi1i = 0;
		niOi1l = 0;
		niOi1O = 0;
		nl0i0i = 0;
		nl0iii = 0;
		nl0ilO = 0;
		nl0iOi = 0;
		nl0iOl = 0;
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0l = 0;
		nl0l0O = 0;
		nl0l1i = 0;
		nl0l1l = 0;
		nl0l1O = 0;
		nl0lii = 0;
		nl0lil = 0;
		nl0liO = 0;
		nl0lli = 0;
		nl0lll = 0;
		nl0llO = 0;
		nl0lOi = 0;
		nl0lOl = 0;
		nl0lOO = 0;
		nl0O0i = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0O1i = 0;
		nl0O1l = 0;
		nl0O1O = 0;
		nl0Oii = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Oli = 0;
		nl0Oll = 0;
		nl0OlO = 0;
		nl0OOi = 0;
		nl0OOl = 0;
		nli00i = 0;
		nli01i = 0;
		nli01l = 0;
		nli01O = 0;
		nli10i = 0;
		nli10l = 0;
		nli10O = 0;
		nli11i = 0;
		nli11l = 0;
		nli11O = 0;
		nli1ii = 0;
		nli1il = 0;
		nli1iO = 0;
		nli1li = 0;
		nli1lO = 0;
		nli1Oi = 0;
		nli1Ol = 0;
		nli1OO = 0;
		nllliO = 0;
		nllllO = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOli = 0;
		nllOll = 0;
		nllOlO = 0;
		nllOOi = 0;
		nllOOl = 0;
		nllOOO = 0;
		nlO11i = 0;
		nlOll = 0;
		nlOOi = 0;
		nlOOl = 0;
		nlOOO = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			n000i <= 0;
			n000l <= 0;
			n000O <= 0;
			n001i <= 0;
			n001l <= 0;
			n001O <= 0;
			n00ii <= 0;
			n00il <= 0;
			n00iO <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n00Oi <= 0;
			n00Ol <= 0;
			n00OO <= 0;
			n010i <= 0;
			n010l <= 0;
			n010O <= 0;
			n011l <= 0;
			n011O <= 0;
			n01ii <= 0;
			n01il <= 0;
			n01iO <= 0;
			n01li <= 0;
			n01ll <= 0;
			n01lO <= 0;
			n01Oi <= 0;
			n01Ol <= 0;
			n01OO <= 0;
			n0i0i <= 0;
			n0i0l <= 0;
			n0i0O <= 0;
			n0i1i <= 0;
			n0i1l <= 0;
			n0i1O <= 0;
			n0iii <= 0;
			n0iil <= 0;
			n0iiO <= 0;
			n0ili <= 0;
			n0ill <= 0;
			n0ilO <= 0;
			n0iOi <= 0;
			n0iOl <= 0;
			n0iOO <= 0;
			n0l00i <= 0;
			n0l00l <= 0;
			n0l00O <= 0;
			n0l01i <= 0;
			n0l01l <= 0;
			n0l01O <= 0;
			n0l0i <= 0;
			n0l0ii <= 0;
			n0l0il <= 0;
			n0l0iO <= 0;
			n0l0l <= 0;
			n0l0li <= 0;
			n0l0ll <= 0;
			n0l0lO <= 0;
			n0l0Oi <= 0;
			n0l0Ol <= 0;
			n0l0OO <= 0;
			n0l10i <= 0;
			n0l10l <= 0;
			n0l10O <= 0;
			n0l1i <= 0;
			n0l1ii <= 0;
			n0l1il <= 0;
			n0l1iO <= 0;
			n0l1l <= 0;
			n0l1li <= 0;
			n0l1ll <= 0;
			n0l1lO <= 0;
			n0l1O <= 0;
			n0l1Oi <= 0;
			n0l1Ol <= 0;
			n0l1OO <= 0;
			n0li0i <= 0;
			n0li0l <= 0;
			n0li0O <= 0;
			n0li1i <= 0;
			n0li1l <= 0;
			n0li1O <= 0;
			n0liii <= 0;
			n0liil <= 0;
			n0liiO <= 0;
			n0lili <= 0;
			n0lill <= 0;
			n0lilO <= 0;
			n0liOi <= 0;
			n0liOl <= 0;
			n0liOO <= 0;
			n0ll0i <= 0;
			n0ll0l <= 0;
			n0ll0O <= 0;
			n0ll1i <= 0;
			n0ll1l <= 0;
			n0ll1O <= 0;
			n0llii <= 0;
			n0llil <= 0;
			n0lliO <= 0;
			n0llli <= 0;
			n0llll <= 0;
			n0lllO <= 0;
			n0llOi <= 0;
			n0llOl <= 0;
			n0llOO <= 0;
			n0lO0i <= 0;
			n0lO0l <= 0;
			n0lO0O <= 0;
			n0lO1i <= 0;
			n0lO1l <= 0;
			n0lO1O <= 0;
			n0lOii <= 0;
			n0lOil <= 0;
			n0lOiO <= 0;
			n0lOli <= 0;
			n0lOll <= 0;
			n0lOlO <= 0;
			n0lOOi <= 0;
			n0lOOl <= 0;
			n0lOOO <= 0;
			n0O00i <= 0;
			n0O00l <= 0;
			n0O00O <= 0;
			n0O01i <= 0;
			n0O01l <= 0;
			n0O01O <= 0;
			n0O0ii <= 0;
			n0O0il <= 0;
			n0O0iO <= 0;
			n0O0li <= 0;
			n0O0ll <= 0;
			n0O0lO <= 0;
			n0O0Oi <= 0;
			n0O0Ol <= 0;
			n0O0OO <= 0;
			n0O10i <= 0;
			n0O10l <= 0;
			n0O10O <= 0;
			n0O11i <= 0;
			n0O11l <= 0;
			n0O11O <= 0;
			n0O1ii <= 0;
			n0O1il <= 0;
			n0O1iO <= 0;
			n0O1li <= 0;
			n0O1ll <= 0;
			n0O1lO <= 0;
			n0O1Oi <= 0;
			n0O1Ol <= 0;
			n0O1OO <= 0;
			n0Oi0i <= 0;
			n0Oi0l <= 0;
			n0Oi0O <= 0;
			n0Oi1i <= 0;
			n0Oi1l <= 0;
			n0Oi1O <= 0;
			n0Oiii <= 0;
			n0Oiil <= 0;
			n0OiiO <= 0;
			n0Oili <= 0;
			n0Oill <= 0;
			n0OilO <= 0;
			n0OiOi <= 0;
			n0OiOl <= 0;
			n0OiOO <= 0;
			n0Ol0i <= 0;
			n0Ol0l <= 0;
			n0Ol0O <= 0;
			n0Ol1i <= 0;
			n0Ol1l <= 0;
			n0Ol1O <= 0;
			n0Olii <= 0;
			n0Olil <= 0;
			n0OliO <= 0;
			n0Olli <= 0;
			n0Olll <= 0;
			n0OllO <= 0;
			n0OlOi <= 0;
			n0OlOl <= 0;
			n0OlOO <= 0;
			n0OO0i <= 0;
			n0OO0l <= 0;
			n0OO0O <= 0;
			n0OO1i <= 0;
			n0OO1l <= 0;
			n0OO1O <= 0;
			n0OOii <= 0;
			n0OOil <= 0;
			n0OOiO <= 0;
			n0OOli <= 0;
			n0OOll <= 0;
			n0OOlO <= 0;
			n0OOOi <= 0;
			n0OOOl <= 0;
			n0OOOO <= 0;
			n10i <= 0;
			n10l <= 0;
			n11i <= 0;
			n11l <= 0;
			n11O <= 0;
			n1ii <= 0;
			n1OOO <= 0;
			ni000i <= 0;
			ni000l <= 0;
			ni000O <= 0;
			ni001i <= 0;
			ni001l <= 0;
			ni001O <= 0;
			ni00ii <= 0;
			ni00il <= 0;
			ni00iO <= 0;
			ni00li <= 0;
			ni00ll <= 0;
			ni00lO <= 0;
			ni00Oi <= 0;
			ni00Ol <= 0;
			ni00OO <= 0;
			ni010i <= 0;
			ni010l <= 0;
			ni010O <= 0;
			ni011i <= 0;
			ni011l <= 0;
			ni011O <= 0;
			ni01ii <= 0;
			ni01il <= 0;
			ni01iO <= 0;
			ni01li <= 0;
			ni01ll <= 0;
			ni01lO <= 0;
			ni01Oi <= 0;
			ni01Ol <= 0;
			ni01OO <= 0;
			ni0i0i <= 0;
			ni0i0l <= 0;
			ni0i0O <= 0;
			ni0i1i <= 0;
			ni0i1l <= 0;
			ni0i1O <= 0;
			ni0iii <= 0;
			ni0iil <= 0;
			ni0iiO <= 0;
			ni0ili <= 0;
			ni0ill <= 0;
			ni0ilO <= 0;
			ni0iOi <= 0;
			ni0iOl <= 0;
			ni0iOO <= 0;
			ni0l0i <= 0;
			ni0l0l <= 0;
			ni0l0O <= 0;
			ni0l1i <= 0;
			ni0l1l <= 0;
			ni0l1O <= 0;
			ni0lii <= 0;
			ni0lil <= 0;
			ni0liO <= 0;
			ni0lli <= 0;
			ni0lll <= 0;
			ni0llO <= 0;
			ni0lOi <= 0;
			ni0lOl <= 0;
			ni0lOO <= 0;
			ni0O0l <= 0;
			ni0O0O <= 0;
			ni0O1i <= 0;
			ni0O1l <= 0;
			ni0O1O <= 0;
			ni0Oii <= 0;
			ni0Oil <= 0;
			ni0OiO <= 0;
			ni0Oli <= 0;
			ni0Oll <= 0;
			ni0OlO <= 0;
			ni0OOi <= 0;
			ni0OOl <= 0;
			ni0OOO <= 0;
			ni100i <= 0;
			ni100l <= 0;
			ni100O <= 0;
			ni101i <= 0;
			ni101l <= 0;
			ni101O <= 0;
			ni10ii <= 0;
			ni10il <= 0;
			ni10iO <= 0;
			ni10li <= 0;
			ni10ll <= 0;
			ni10lO <= 0;
			ni10Oi <= 0;
			ni10Ol <= 0;
			ni10OO <= 0;
			ni110i <= 0;
			ni110l <= 0;
			ni110O <= 0;
			ni111i <= 0;
			ni111l <= 0;
			ni111O <= 0;
			ni11ii <= 0;
			ni11il <= 0;
			ni11iO <= 0;
			ni11li <= 0;
			ni11ll <= 0;
			ni11lO <= 0;
			ni11Oi <= 0;
			ni11Ol <= 0;
			ni11OO <= 0;
			ni1i0i <= 0;
			ni1i0l <= 0;
			ni1i0O <= 0;
			ni1i1i <= 0;
			ni1i1l <= 0;
			ni1i1O <= 0;
			ni1iii <= 0;
			ni1iil <= 0;
			ni1iiO <= 0;
			ni1ili <= 0;
			ni1ill <= 0;
			ni1ilO <= 0;
			ni1iOi <= 0;
			ni1iOl <= 0;
			ni1iOO <= 0;
			ni1l0i <= 0;
			ni1l0l <= 0;
			ni1l0O <= 0;
			ni1l1i <= 0;
			ni1l1l <= 0;
			ni1l1O <= 0;
			ni1lii <= 0;
			ni1lil <= 0;
			ni1liO <= 0;
			ni1lli <= 0;
			ni1lll <= 0;
			ni1llO <= 0;
			ni1lOi <= 0;
			ni1lOl <= 0;
			ni1lOO <= 0;
			ni1O0i <= 0;
			ni1O0l <= 0;
			ni1O0O <= 0;
			ni1O1i <= 0;
			ni1O1l <= 0;
			ni1O1O <= 0;
			ni1Oii <= 0;
			ni1Oil <= 0;
			ni1OiO <= 0;
			ni1Oli <= 0;
			ni1Oll <= 0;
			ni1OlO <= 0;
			ni1OOi <= 0;
			ni1OOl <= 0;
			ni1OOO <= 0;
			nii00i <= 0;
			nii00l <= 0;
			nii00O <= 0;
			nii01i <= 0;
			nii01l <= 0;
			nii01O <= 0;
			nii0ii <= 0;
			nii0il <= 0;
			nii0iO <= 0;
			nii0li <= 0;
			nii0ll <= 0;
			nii0lO <= 0;
			nii0Oi <= 0;
			nii0Ol <= 0;
			nii0OO <= 0;
			nii10i <= 0;
			nii10l <= 0;
			nii10O <= 0;
			nii11i <= 0;
			nii11l <= 0;
			nii11O <= 0;
			nii1ii <= 0;
			nii1il <= 0;
			nii1iO <= 0;
			nii1li <= 0;
			nii1ll <= 0;
			nii1lO <= 0;
			nii1Oi <= 0;
			nii1Ol <= 0;
			nii1OO <= 0;
			niii0i <= 0;
			niii0l <= 0;
			niii0O <= 0;
			niii1i <= 0;
			niii1l <= 0;
			niii1O <= 0;
			niiiii <= 0;
			niiiil <= 0;
			niiiiO <= 0;
			niiili <= 0;
			niiill <= 0;
			niiilO <= 0;
			niiiOi <= 0;
			niiiOl <= 0;
			niiiOO <= 0;
			niil0i <= 0;
			niil0l <= 0;
			niil0O <= 0;
			niil1i <= 0;
			niil1l <= 0;
			niil1O <= 0;
			niilii <= 0;
			niilil <= 0;
			niiliO <= 0;
			niilli <= 0;
			niilll <= 0;
			niillO <= 0;
			niilOi <= 0;
			niilOl <= 0;
			niilOO <= 0;
			niiO0i <= 0;
			niiO0l <= 0;
			niiO0O <= 0;
			niiO1i <= 0;
			niiO1l <= 0;
			niiO1O <= 0;
			niiOii <= 0;
			niiOil <= 0;
			niiOiO <= 0;
			niiOli <= 0;
			niiOll <= 0;
			niiOlO <= 0;
			niiOOi <= 0;
			niiOOl <= 0;
			niiOOO <= 0;
			nil00i <= 0;
			nil00l <= 0;
			nil00O <= 0;
			nil01i <= 0;
			nil01l <= 0;
			nil01O <= 0;
			nil0ii <= 0;
			nil0il <= 0;
			nil0iO <= 0;
			nil0li <= 0;
			nil0ll <= 0;
			nil0lO <= 0;
			nil0Oi <= 0;
			nil0Ol <= 0;
			nil0OO <= 0;
			nil10i <= 0;
			nil10l <= 0;
			nil10O <= 0;
			nil11i <= 0;
			nil11l <= 0;
			nil11O <= 0;
			nil1ii <= 0;
			nil1il <= 0;
			nil1iO <= 0;
			nil1li <= 0;
			nil1ll <= 0;
			nil1lO <= 0;
			nil1Oi <= 0;
			nil1Ol <= 0;
			nil1OO <= 0;
			nili0i <= 0;
			nili0l <= 0;
			nili0O <= 0;
			nili1i <= 0;
			nili1l <= 0;
			nili1O <= 0;
			niliii <= 0;
			niliil <= 0;
			niliiO <= 0;
			nilili <= 0;
			nilill <= 0;
			nililO <= 0;
			niliOi <= 0;
			niliOl <= 0;
			niliOO <= 0;
			nill0i <= 0;
			nill0l <= 0;
			nill0O <= 0;
			nill1i <= 0;
			nill1l <= 0;
			nill1O <= 0;
			nillii <= 0;
			nillil <= 0;
			nilliO <= 0;
			nillli <= 0;
			nillll <= 0;
			nilllO <= 0;
			nillOi <= 0;
			nillOl <= 0;
			nillOO <= 0;
			nilO0i <= 0;
			nilO0l <= 0;
			nilO0O <= 0;
			nilO1i <= 0;
			nilO1l <= 0;
			nilO1O <= 0;
			nilOii <= 0;
			nilOil <= 0;
			nilOiO <= 0;
			nilOli <= 0;
			nilOll <= 0;
			nilOlO <= 0;
			nilOOi <= 0;
			nilOOl <= 0;
			nilOOO <= 0;
			niO00i <= 0;
			niO00l <= 0;
			niO00O <= 0;
			niO01i <= 0;
			niO01l <= 0;
			niO01O <= 0;
			niO0ii <= 0;
			niO0il <= 0;
			niO0iO <= 0;
			niO0li <= 0;
			niO0ll <= 0;
			niO0lO <= 0;
			niO0Oi <= 0;
			niO0Ol <= 0;
			niO0OO <= 0;
			niO10i <= 0;
			niO10l <= 0;
			niO10O <= 0;
			niO11i <= 0;
			niO11l <= 0;
			niO11O <= 0;
			niO1ii <= 0;
			niO1il <= 0;
			niO1iO <= 0;
			niO1li <= 0;
			niO1ll <= 0;
			niO1lO <= 0;
			niO1Oi <= 0;
			niO1Ol <= 0;
			niO1OO <= 0;
			niOi1i <= 0;
			niOi1l <= 0;
			niOi1O <= 0;
			nl0i0i <= 0;
			nl0iii <= 0;
			nl0ilO <= 0;
			nl0iOi <= 0;
			nl0iOl <= 0;
			nl0iOO <= 0;
			nl0l0i <= 0;
			nl0l0l <= 0;
			nl0l0O <= 0;
			nl0l1i <= 0;
			nl0l1l <= 0;
			nl0l1O <= 0;
			nl0lii <= 0;
			nl0lil <= 0;
			nl0liO <= 0;
			nl0lli <= 0;
			nl0lll <= 0;
			nl0llO <= 0;
			nl0lOi <= 0;
			nl0lOl <= 0;
			nl0lOO <= 0;
			nl0O0i <= 0;
			nl0O0l <= 0;
			nl0O0O <= 0;
			nl0O1i <= 0;
			nl0O1l <= 0;
			nl0O1O <= 0;
			nl0Oii <= 0;
			nl0Oil <= 0;
			nl0OiO <= 0;
			nl0Oli <= 0;
			nl0Oll <= 0;
			nl0OlO <= 0;
			nl0OOi <= 0;
			nl0OOl <= 0;
			nli00i <= 0;
			nli01i <= 0;
			nli01l <= 0;
			nli01O <= 0;
			nli10i <= 0;
			nli10l <= 0;
			nli10O <= 0;
			nli11i <= 0;
			nli11l <= 0;
			nli11O <= 0;
			nli1ii <= 0;
			nli1il <= 0;
			nli1iO <= 0;
			nli1li <= 0;
			nli1lO <= 0;
			nli1Oi <= 0;
			nli1Ol <= 0;
			nli1OO <= 0;
			nllliO <= 0;
			nllllO <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nllOOO <= 0;
			nlO11i <= 0;
			nlOll <= 0;
			nlOOi <= 0;
			nlOOl <= 0;
			nlOOO <= 0;
		end
		else if  (wire_n10O_ENA == 1'b1) 
		begin
			n000i <= wire_n0OiO_o;
			n000l <= wire_n0Oli_o;
			n000O <= wire_n0Oll_o;
			n001i <= wire_n0O0O_o;
			n001l <= wire_n0Oii_o;
			n001O <= wire_n0Oil_o;
			n00ii <= wire_n0OlO_o;
			n00il <= wire_n0OOi_o;
			n00iO <= wire_n0OOl_o;
			n00li <= wire_n0OOO_o;
			n00ll <= wire_ni11i_o;
			n00lO <= wire_ni11l_o;
			n00Oi <= wire_ni11O_o;
			n00Ol <= wire_ni10i_o;
			n00OO <= wire_ni10l_o;
			n010i <= wire_n0liO_o;
			n010l <= wire_n0lli_o;
			n010O <= wire_n0lll_o;
			n011l <= wire_n0lii_o;
			n011O <= wire_n0lil_o;
			n01ii <= wire_n0llO_o;
			n01il <= wire_n0lOi_o;
			n01iO <= wire_n0lOl_o;
			n01li <= wire_n0lOO_o;
			n01ll <= wire_n0O1i_o;
			n01lO <= wire_n0O1l_o;
			n01Oi <= wire_n0O1O_o;
			n01Ol <= wire_n0O0i_o;
			n01OO <= wire_n0O0l_o;
			n0i0i <= wire_ni1iO_o;
			n0i0l <= wire_ni1li_o;
			n0i0O <= wire_ni1ll_o;
			n0i1i <= wire_ni10O_o;
			n0i1l <= wire_ni1ii_o;
			n0i1O <= wire_ni1il_o;
			n0iii <= wire_ni1lO_o;
			n0iil <= wire_ni1Oi_o;
			n0iiO <= wire_ni1Ol_o;
			n0ili <= wire_ni1OO_o;
			n0ill <= wire_ni01i_o;
			n0ilO <= wire_ni01l_o;
			n0iOi <= wire_ni01O_o;
			n0iOl <= wire_ni00i_o;
			n0iOO <= wire_ni00l_o;
			n0l00i <= b[6];
			n0l00l <= b[7];
			n0l00O <= b[8];
			n0l01i <= b[3];
			n0l01l <= b[4];
			n0l01O <= b[5];
			n0l0i <= wire_ni0iO_o;
			n0l0ii <= b[9];
			n0l0il <= b[10];
			n0l0iO <= b[11];
			n0l0l <= wire_nlOlO_o[11];
			n0l0li <= b[12];
			n0l0ll <= b[13];
			n0l0lO <= b[14];
			n0l0Oi <= b[15];
			n0l0Ol <= b[16];
			n0l0OO <= b[17];
			n0l10i <= wire_nO_dataout;
			n0l10l <= b[23];
			n0l10O <= b[24];
			n0l1i <= wire_ni00O_o;
			n0l1ii <= b[25];
			n0l1il <= b[26];
			n0l1iO <= b[27];
			n0l1l <= wire_ni0ii_o;
			n0l1li <= b[28];
			n0l1ll <= b[29];
			n0l1lO <= b[30];
			n0l1O <= wire_ni0il_o;
			n0l1Oi <= b[0];
			n0l1Ol <= b[1];
			n0l1OO <= b[2];
			n0li0i <= b[21];
			n0li0l <= b[22];
			n0li0O <= a[0];
			n0li1i <= b[18];
			n0li1l <= b[19];
			n0li1O <= b[20];
			n0liii <= a[1];
			n0liil <= a[2];
			n0liiO <= a[3];
			n0lili <= a[4];
			n0lill <= a[5];
			n0lilO <= a[6];
			n0liOi <= a[7];
			n0liOl <= a[8];
			n0liOO <= a[9];
			n0ll0i <= a[13];
			n0ll0l <= a[14];
			n0ll0O <= a[15];
			n0ll1i <= a[10];
			n0ll1l <= a[11];
			n0ll1O <= a[12];
			n0llii <= a[16];
			n0llil <= a[17];
			n0lliO <= a[18];
			n0llli <= a[19];
			n0llll <= a[20];
			n0lllO <= a[21];
			n0llOi <= a[22];
			n0llOl <= a[23];
			n0llOO <= a[24];
			n0lO0i <= a[28];
			n0lO0l <= a[29];
			n0lO0O <= a[30];
			n0lO1i <= a[25];
			n0lO1l <= a[26];
			n0lO1O <= a[27];
			n0lOii <= a[31];
			n0lOil <= n0lOiO;
			n0lOiO <= wire_ni_dataout;
			n0lOli <= n0lOll;
			n0lOll <= wire_nill_dataout;
			n0lOlO <= (n0lOil ^ n0lOli);
			n0lOOi <= n0iO0O;
			n0lOOl <= wire_nilO_dataout;
			n0lOOO <= wire_niOi_dataout;
			n0O00i <= wire_n1l_dataout;
			n0O00l <= wire_n1O_dataout;
			n0O00O <= wire_n0i_dataout;
			n0O01i <= wire_nlOl_dataout;
			n0O01l <= wire_nlOO_dataout;
			n0O01O <= wire_n1i_dataout;
			n0O0ii <= ((~ n0l0l) & wire_n1l0i_dataout);
			n0O0il <= ((~ n0l0l) & wire_n1l0l_dataout);
			n0O0iO <= ((~ n0l0l) & wire_n1l0O_dataout);
			n0O0li <= ((~ n0l0l) & wire_n1lii_dataout);
			n0O0ll <= ((~ n0l0l) & wire_n1lil_dataout);
			n0O0lO <= ((~ n0l0l) & wire_n1liO_dataout);
			n0O0Oi <= ((~ n0l0l) & wire_n1lli_dataout);
			n0O0Ol <= ((~ n0l0l) & wire_n1lll_dataout);
			n0O0OO <= ((~ n0l0l) & wire_n1llO_dataout);
			n0O10i <= wire_nl1l_dataout;
			n0O10l <= wire_nl1O_dataout;
			n0O10O <= wire_nl0i_dataout;
			n0O11i <= wire_niOl_dataout;
			n0O11l <= wire_niOO_dataout;
			n0O11O <= wire_nl1i_dataout;
			n0O1ii <= wire_nl0l_dataout;
			n0O1il <= wire_nl0O_dataout;
			n0O1iO <= wire_nlii_dataout;
			n0O1li <= wire_nlil_dataout;
			n0O1ll <= wire_nliO_dataout;
			n0O1lO <= wire_nlli_dataout;
			n0O1Oi <= wire_nlll_dataout;
			n0O1Ol <= wire_nllO_dataout;
			n0O1OO <= wire_nlOi_dataout;
			n0Oi0i <= ((~ n0l0l) & wire_n1O1i_dataout);
			n0Oi0l <= ((~ n0l0l) & wire_n1O1l_dataout);
			n0Oi0O <= ((~ n0l0l) & wire_n1O1O_dataout);
			n0Oi1i <= ((~ n0l0l) & wire_n1lOi_dataout);
			n0Oi1l <= ((~ n0l0l) & wire_n1lOl_dataout);
			n0Oi1O <= ((~ n0l0l) & wire_n1lOO_dataout);
			n0Oiii <= ((~ n0l0l) & wire_n1O0i_dataout);
			n0Oiil <= ((~ n0l0l) & wire_n1O0l_dataout);
			n0OiiO <= ((~ n0l0l) & wire_n1O0O_dataout);
			n0Oili <= ((~ n0l0l) & wire_n1Oii_dataout);
			n0Oill <= ((~ n0l0l) & wire_n1Oil_dataout);
			n0OilO <= ((~ n0l0l) & wire_n1OiO_dataout);
			n0OiOi <= ((~ n0l0l) & wire_n1Oli_dataout);
			n0OiOl <= ((~ n0l0l) & wire_n1Oll_dataout);
			n0OiOO <= ((~ n0l0l) & wire_n1OlO_dataout);
			n0Ol0i <= n0OOlO;
			n0Ol0l <= n0OOOi;
			n0Ol0O <= n0OOOl;
			n0Ol1i <= ((~ n0l0l) & wire_n1OOi_dataout);
			n0Ol1l <= ((~ n0l0l) & wire_n1OOl_dataout);
			n0Ol1O <= n0OOll;
			n0Olii <= n0OOOO;
			n0Olil <= ni111i;
			n0OliO <= ni111l;
			n0Olli <= ni111O;
			n0Olll <= ni110i;
			n0OllO <= ni110l;
			n0OlOi <= ni110O;
			n0OlOl <= ni11ii;
			n0OlOO <= ni11il;
			n0OO0i <= ni11lO;
			n0OO0l <= ni11Oi;
			n0OO0O <= ni11Ol;
			n0OO1i <= ni11iO;
			n0OO1l <= ni11li;
			n0OO1O <= ni11ll;
			n0OOii <= ni11OO;
			n0OOil <= ni101i;
			n0OOiO <= ni101l;
			n0OOli <= ni101O;
			n0OOll <= ni100i;
			n0OOlO <= ni100l;
			n0OOOi <= ni100O;
			n0OOOl <= ni10ii;
			n0OOOO <= ni10il;
			n10i <= wire_n1il_o[8];
			n10l <= wire_n1il_o[9];
			n11i <= wire_n1il_o[5];
			n11l <= wire_n1il_o[6];
			n11O <= wire_n1il_o[7];
			n1ii <= wire_nl_o[33];
			n1OOO <= wire_n0l0O_o;
			ni000i <= ni1O1O;
			ni000l <= ni1O0i;
			ni000O <= ni1O0l;
			ni001i <= ni1lOO;
			ni001l <= ni1O1i;
			ni001O <= ni1O1l;
			ni00ii <= ni1O0O;
			ni00il <= ni1Oii;
			ni00iO <= ni1Oil;
			ni00li <= ni1lli;
			ni00ll <= ni1lll;
			ni00lO <= ni1llO;
			ni00Oi <= ni1lOi;
			ni00Ol <= ni1lOl;
			ni00OO <= ni1lOO;
			ni010i <= ni1l1O;
			ni010l <= ni1l0i;
			ni010O <= ni1l0l;
			ni011i <= ni1iOO;
			ni011l <= ni1l1i;
			ni011O <= ni1l1l;
			ni01ii <= ni1l0O;
			ni01il <= ni1lii;
			ni01iO <= ni1lil;
			ni01li <= ni1liO;
			ni01ll <= ni1lli;
			ni01lO <= ni1lll;
			ni01Oi <= ni1llO;
			ni01Ol <= ni1lOi;
			ni01OO <= ni1lOl;
			ni0i0i <= ni1O0i;
			ni0i0l <= ni1O0l;
			ni0i0O <= ni1O0O;
			ni0i1i <= ni1O1i;
			ni0i1l <= ni1O1l;
			ni0i1O <= ni1O1O;
			ni0iii <= ni1Oii;
			ni0iil <= ni1Oil;
			ni0iiO <= ni1OiO;
			ni0ili <= n0iOOO;
			ni0ill <= (~ wire_nllO0O_dataout);
			ni0ilO <= n0iOOi;
			ni0iOi <= n0iOOl;
			ni0iOl <= ni0ili;
			ni0iOO <= ni1OlO;
			ni0l0i <= ni0l0l;
			ni0l0l <= n0lOli;
			ni0l0O <= n0iO1l;
			ni0l1i <= ni0l1l;
			ni0l1l <= ni0l1O;
			ni0l1O <= ni0l0i;
			ni0lii <= ni0lil;
			ni0lil <= ni0liO;
			ni0liO <= ni0lli;
			ni0lli <= ni0lll;
			ni0lll <= ni0llO;
			ni0llO <= ni0l0O;
			ni0lOi <= ni0lOl;
			ni0lOl <= ni0lOO;
			ni0lOO <= ni0O1i;
			ni0O0l <= wire_ni0O0i_q_b[0];
			ni0O0O <= wire_ni0O0i_q_b[1];
			ni0O1i <= ni0O1l;
			ni0O1l <= ni0O1O;
			ni0O1O <= (~ n0lOOi);
			ni0Oii <= wire_ni0O0i_q_b[2];
			ni0Oil <= wire_ni0O0i_q_b[3];
			ni0OiO <= wire_ni0O0i_q_b[4];
			ni0Oli <= wire_ni0O0i_q_b[5];
			ni0Oll <= wire_ni0O0i_q_b[6];
			ni0OlO <= wire_ni0O0i_q_b[7];
			ni0OOi <= n0iO1i;
			ni0OOl <= n0ilOO;
			ni0OOO <= nii11i;
			ni100i <= wire_n1li_dataout;
			ni100l <= wire_n1ll_dataout;
			ni100O <= wire_n1lO_dataout;
			ni101i <= ni1iiO;
			ni101l <= ni1ili;
			ni101O <= ni1ill;
			ni10ii <= wire_n1Oi_dataout;
			ni10il <= wire_n1Ol_dataout;
			ni10iO <= wire_n1OO_dataout;
			ni10li <= wire_n01i_dataout;
			ni10ll <= wire_n01l_dataout;
			ni10lO <= wire_n01O_dataout;
			ni10Oi <= wire_n00i_dataout;
			ni10Ol <= wire_n00l_dataout;
			ni10OO <= wire_n00O_dataout;
			ni110i <= ni10lO;
			ni110l <= ni10Oi;
			ni110O <= ni10Ol;
			ni111i <= ni10iO;
			ni111l <= ni10li;
			ni111O <= ni10ll;
			ni11ii <= ni10OO;
			ni11il <= ni1i1i;
			ni11iO <= ni1i1l;
			ni11li <= ni1i1O;
			ni11ll <= ni1i0i;
			ni11lO <= ni1i0l;
			ni11Oi <= ni1i0O;
			ni11Ol <= ni1iii;
			ni11OO <= ni1iil;
			ni1i0i <= wire_n0li_dataout;
			ni1i0l <= wire_n0ll_dataout;
			ni1i0O <= wire_n0lO_dataout;
			ni1i1i <= wire_n0ii_dataout;
			ni1i1l <= wire_n0il_dataout;
			ni1i1O <= wire_n0iO_dataout;
			ni1iii <= wire_n0Oi_dataout;
			ni1iil <= wire_n0Ol_dataout;
			ni1iiO <= wire_n0OO_dataout;
			ni1ili <= wire_ni1i_dataout;
			ni1ill <= wire_ni1l_dataout;
			ni1ilO <= n0iO0l;
			ni1iOi <= wire_nlO0iO_o[0];
			ni1iOl <= wire_nlO0iO_o[1];
			ni1iOO <= wire_nlO0iO_o[2];
			ni1l0i <= wire_nlO0iO_o[6];
			ni1l0l <= wire_nlO0iO_o[7];
			ni1l0O <= wire_nlO0iO_o[8];
			ni1l1i <= wire_nlO0iO_o[3];
			ni1l1l <= wire_nlO0iO_o[4];
			ni1l1O <= wire_nlO0iO_o[5];
			ni1lii <= wire_nlO0iO_o[9];
			ni1lil <= wire_nlO0iO_o[10];
			ni1liO <= wire_nlO0iO_o[11];
			ni1lli <= wire_nlO0iO_o[12];
			ni1lll <= wire_nlO0iO_o[13];
			ni1llO <= wire_nlO0iO_o[14];
			ni1lOi <= wire_nlO0iO_o[15];
			ni1lOl <= wire_nlO0iO_o[16];
			ni1lOO <= wire_nlO0iO_o[17];
			ni1O0i <= wire_nlO0iO_o[21];
			ni1O0l <= wire_nlO0iO_o[22];
			ni1O0O <= wire_nlO0iO_o[23];
			ni1O1i <= wire_nlO0iO_o[18];
			ni1O1l <= wire_nlO0iO_o[19];
			ni1O1O <= wire_nlO0iO_o[20];
			ni1Oii <= wire_nlO0iO_o[24];
			ni1Oil <= wire_nlO0iO_o[25];
			ni1OiO <= wire_nlO0iO_o[26];
			ni1Oli <= (~ ni1ilO);
			ni1Oll <= n0iO0i;
			ni1OlO <= ni1Oll;
			ni1OOi <= ni1Oli;
			ni1OOl <= ni1iOi;
			ni1OOO <= ni1iOl;
			nii00i <= nii00l;
			nii00l <= nii01l;
			nii00O <= ((((n0iOlO & n0iOll) & ni0l1i) & (~ n0iO1O)) | (((((ni0OOl & nii10l) & ni0l1i) & ni0OOO) | ((n0iOll & nii10l) & ni0l1i)) | ((n0iOli & ni0OOO) | (n0iOiO & ni0l1i))));
			nii01i <= nii1ll;
			nii01l <= n0ilOi;
			nii01O <= nii00i;
			nii0ii <= nii0il;
			nii0il <= nii00O;
			nii0iO <= (ni0lii & (~ nii1lO));
			nii0li <= nii0ll;
			nii0ll <= nii0iO;
			nii0lO <= (ni0OOi & (~ nii01O));
			nii0Oi <= nii0Ol;
			nii0Ol <= nii0lO;
			nii0OO <= niii1i;
			nii10i <= n0lOil;
			nii10l <= nii10O;
			nii10O <= nii1ii;
			nii11i <= nii11l;
			nii11l <= nii11O;
			nii11O <= nii10i;
			nii1ii <= nii1il;
			nii1il <= nii1iO;
			nii1iO <= nii1li;
			nii1li <= n0lOOi;
			nii1ll <= n0ilOl;
			nii1lO <= nii1Oi;
			nii1Oi <= nii1Ol;
			nii1Ol <= nii1OO;
			nii1OO <= nii01i;
			niii0i <= niii0l;
			niii0l <= niii0O;
			niii0O <= n0lOlO;
			niii1i <= niii1l;
			niii1l <= niii1O;
			niii1O <= niii0i;
			niiiii <= niiiil;
			niiiil <= niiiiO;
			niiiiO <= n0iOli;
			niiili <= niiill;
			niiill <= niiilO;
			niiilO <= n0iOiO;
			niiiOi <= niiliO;
			niiiOl <= niilli;
			niiiOO <= niilll;
			niil0i <= niilOO;
			niil0l <= niiO1i;
			niil0O <= niiO1l;
			niil1i <= niillO;
			niil1l <= niilOi;
			niil1O <= niilOl;
			niilii <= niiO1O;
			niilil <= niiO0i;
			niiliO <= ni1OOi;
			niilli <= ni1OOl;
			niilll <= ni1OOO;
			niillO <= ni011i;
			niilOi <= ni011l;
			niilOl <= ni011O;
			niilOO <= ni010i;
			niiO0i <= ni01il;
			niiO0l <= nil01l;
			niiO0O <= nil01O;
			niiO1i <= ni010l;
			niiO1l <= ni010O;
			niiO1O <= ni01ii;
			niiOii <= nil00i;
			niiOil <= nil00l;
			niiOiO <= nil00O;
			niiOli <= nil0ii;
			niiOll <= nil0il;
			niiOlO <= nil0iO;
			niiOOi <= nil0li;
			niiOOl <= nil0ll;
			niiOOO <= nil0lO;
			nil00i <= ni1OOO;
			nil00l <= ni011i;
			nil00O <= ni011l;
			nil01i <= niliOi;
			nil01l <= ni1OOi;
			nil01O <= ni1OOl;
			nil0ii <= ni011O;
			nil0il <= ni010i;
			nil0iO <= ni010l;
			nil0li <= ni010O;
			nil0ll <= ni01ii;
			nil0lO <= ni01il;
			nil0Oi <= ni01iO;
			nil0Ol <= ni01li;
			nil0OO <= ni01ll;
			nil10i <= nili1i;
			nil10l <= nili1l;
			nil10O <= nili1O;
			nil11i <= nil0Oi;
			nil11l <= nil0Ol;
			nil11O <= nil0OO;
			nil1ii <= nili0i;
			nil1il <= nili0l;
			nil1iO <= nili0O;
			nil1li <= niliii;
			nil1ll <= niliil;
			nil1lO <= niliiO;
			nil1Oi <= nilili;
			nil1Ol <= nilill;
			nil1OO <= nililO;
			nili0i <= ni01OO;
			nili0l <= ni001i;
			nili0O <= ni001l;
			nili1i <= ni01lO;
			nili1l <= ni01Oi;
			nili1O <= ni01Ol;
			niliii <= ni001O;
			niliil <= ni000i;
			niliiO <= ni000l;
			nilili <= ni000O;
			nilill <= ni00ii;
			nililO <= ni00il;
			niliOi <= ni00iO;
			niliOl <= n0illO;
			niliOO <= wire_nli0li_dataout;
			nill0i <= wire_nli0Ol_dataout;
			nill0l <= wire_nli0OO_dataout;
			nill0O <= wire_nlii1i_dataout;
			nill1i <= wire_nli0ll_dataout;
			nill1l <= wire_nli0lO_dataout;
			nill1O <= wire_nli0Oi_dataout;
			nillii <= wire_nlii1l_dataout;
			nillil <= wire_nlii1O_dataout;
			nilliO <= wire_nlii0i_dataout;
			nillli <= wire_nlii0l_dataout;
			nillll <= wire_nlii0O_dataout;
			nilllO <= wire_nliiii_dataout;
			nillOi <= wire_nliiil_dataout;
			nillOl <= wire_nliiiO_dataout;
			nillOO <= wire_nliili_dataout;
			nilO0i <= wire_nliiOl_dataout;
			nilO0l <= wire_nliiOO_dataout;
			nilO0O <= wire_nlil1i_dataout;
			nilO1i <= wire_nliill_dataout;
			nilO1l <= wire_nliilO_dataout;
			nilO1O <= wire_nliiOi_dataout;
			nilOii <= wire_nlil1l_dataout;
			nilOil <= wire_nlil1O_dataout;
			nilOiO <= nl0O0i;
			nilOli <= nl0O0l;
			nilOll <= nl0O0O;
			nilOlO <= nl0Oii;
			nilOOi <= nl0Oil;
			nilOOl <= nl0OiO;
			nilOOO <= nl0Oli;
			niO00i <= nl0l0i;
			niO00l <= nl0l0l;
			niO00O <= nl0l0O;
			niO01i <= nl0l1i;
			niO01l <= nl0l1l;
			niO01O <= nl0l1O;
			niO0ii <= nl0lii;
			niO0il <= nl0lil;
			niO0iO <= nl0liO;
			niO0li <= nl0lli;
			niO0ll <= nl0lll;
			niO0lO <= nl0llO;
			niO0Oi <= nl0lOi;
			niO0Ol <= nl0lOl;
			niO0OO <= nl0lOO;
			niO10i <= ((((~ nl0OOi) & nl0OlO) | n0illl) & niO11O);
			niO10l <= niO10O;
			niO10O <= n0iO1O;
			niO11i <= nl0Oll;
			niO11l <= (n0iOlO & n0iOll);
			niO11O <= niO11l;
			niO1ii <= niO1il;
			niO1il <= nii10l;
			niO1iO <= niO1li;
			niO1li <= ni0OOl;
			niO1ll <= nl0i0i;
			niO1lO <= nl0ilO;
			niO1Oi <= nl0iOi;
			niO1Ol <= nl0iOl;
			niO1OO <= nl0iOO;
			niOi1i <= nl0O1i;
			niOi1l <= nl0O1l;
			niOi1O <= nl0O1O;
			nl0i0i <= wire_nl0OOO_o[1];
			nl0iii <= wire_nl0i0l_o;
			nl0ilO <= wire_nl0OOO_o[2];
			nl0iOi <= wire_nl0OOO_o[3];
			nl0iOl <= wire_nl0OOO_o[4];
			nl0iOO <= wire_nl0OOO_o[5];
			nl0l0i <= wire_nl0OOO_o[9];
			nl0l0l <= wire_nl0OOO_o[10];
			nl0l0O <= wire_nl0OOO_o[11];
			nl0l1i <= wire_nl0OOO_o[6];
			nl0l1l <= wire_nl0OOO_o[7];
			nl0l1O <= wire_nl0OOO_o[8];
			nl0lii <= wire_nl0OOO_o[12];
			nl0lil <= wire_nl0OOO_o[13];
			nl0liO <= wire_nl0OOO_o[14];
			nl0lli <= wire_nl0OOO_o[15];
			nl0lll <= wire_nl0OOO_o[16];
			nl0llO <= wire_nl0OOO_o[17];
			nl0lOi <= wire_nl0OOO_o[18];
			nl0lOl <= wire_nl0OOO_o[19];
			nl0lOO <= wire_nl0OOO_o[20];
			nl0O0i <= wire_nl0OOO_o[24];
			nl0O0l <= wire_nl0OOO_o[25];
			nl0O0O <= wire_nl0OOO_o[26];
			nl0O1i <= wire_nl0OOO_o[21];
			nl0O1l <= wire_nl0OOO_o[22];
			nl0O1O <= wire_nl0OOO_o[23];
			nl0Oii <= wire_nl0OOO_o[27];
			nl0Oil <= wire_nl0OOO_o[28];
			nl0OiO <= wire_nl0OOO_o[29];
			nl0Oli <= wire_nl0OOO_o[30];
			nl0Oll <= wire_nl0OOO_o[31];
			nl0OlO <= wire_nl0OOO_o[32];
			nl0OOi <= wire_nl0OOO_o[33];
			nl0OOl <= wire_nli1ll_o[1];
			nli00i <= wire_nli00O_o[8];
			nli01i <= wire_nli00O_o[5];
			nli01l <= wire_nli00O_o[6];
			nli01O <= wire_nli00O_o[7];
			nli10i <= wire_nli1ll_o[5];
			nli10l <= wire_nli1ll_o[6];
			nli10O <= wire_nli1ll_o[7];
			nli11i <= wire_nli1ll_o[2];
			nli11l <= wire_nli1ll_o[3];
			nli11O <= wire_nli1ll_o[4];
			nli1ii <= wire_nli1ll_o[8];
			nli1il <= wire_nli1ll_o[9];
			nli1iO <= wire_nli1ll_o[10];
			nli1li <= wire_nli00O_o[0];
			nli1lO <= wire_nli00O_o[1];
			nli1Oi <= wire_nli00O_o[2];
			nli1Ol <= wire_nli00O_o[3];
			nli1OO <= wire_nli00O_o[4];
			nllliO <= wire_nlllOO_o[0];
			nllllO <= wire_nlllOO_o[1];
			nllO1l <= (wire_nlllll_dataout & (~ wire_nlllli_dataout));
			nllO1O <= wire_nlO11l_dataout;
			nllOli <= wire_nlO11O_dataout;
			nllOll <= wire_nlO10i_dataout;
			nllOlO <= wire_nlO10l_dataout;
			nllOOi <= wire_nlO10O_dataout;
			nllOOl <= wire_nlO1ii_dataout;
			nllOOO <= wire_nlO1il_dataout;
			nlO11i <= wire_n011i_o[11];
			nlOll <= wire_n1il_o[1];
			nlOOi <= wire_n1il_o[2];
			nlOOl <= wire_n1il_o[3];
			nlOOO <= wire_n1il_o[4];
		end
	end
	assign
		wire_n10O_ENA = en[0];
	initial
	begin
		nli00l = 0;
		nlllil = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			nli00l <= 1;
			nlllil <= 1;
		end
		else 
		begin
			nli00l <= wire_nlllli_dataout;
			nlllil <= wire_nlllll_dataout;
		end
	end
	event nli00l_event;
	event nlllil_event;
	initial
		#1 ->nli00l_event;
	initial
		#1 ->nlllil_event;
	always @(nli00l_event)
		nli00l <= 1;
	always @(nlllil_event)
		nlllil <= 1;
	initial
	begin
		nlllOl = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			nlllOl <= 0;
		end
		else if  (wire_nlllOi_ENA == 1'b1) 
		begin
			nlllOl <= nllO1l;
		end
	end
	assign
		wire_nlllOi_ENA = (~ (nlllOl | (~ en[0])));
	assign		wire_n00i_dataout = (n1ii === 1'b1) ? n0l0ii : n0liOO;
	assign		wire_n00l_dataout = (n1ii === 1'b1) ? n0l0il : n0ll1i;
	assign		wire_n00O_dataout = (n1ii === 1'b1) ? n0l0iO : n0ll1l;
	assign		wire_n01i_dataout = (n1ii === 1'b1) ? n0l00i : n0lilO;
	assign		wire_n01l_dataout = (n1ii === 1'b1) ? n0l00l : n0liOi;
	assign		wire_n01O_dataout = (n1ii === 1'b1) ? n0l00O : n0liOl;
	assign		wire_n0i_dataout = (n1ii === 1'b1) ? n0llOi : n0li0l;
	assign		wire_n0ii_dataout = (n1ii === 1'b1) ? n0l0li : n0ll1O;
	assign		wire_n0il_dataout = (n1ii === 1'b1) ? n0l0ll : n0ll0i;
	assign		wire_n0iO_dataout = (n1ii === 1'b1) ? n0l0lO : n0ll0l;
	assign		wire_n0l_dataout = (n1ii === 1'b1) ? n0llOl : n0l10l;
	assign		wire_n0li_dataout = (n1ii === 1'b1) ? n0l0Oi : n0ll0O;
	assign		wire_n0ll_dataout = (n1ii === 1'b1) ? n0l0Ol : n0llii;
	assign		wire_n0lO_dataout = (n1ii === 1'b1) ? n0l0OO : n0llil;
	assign		wire_n0O_dataout = (n1ii === 1'b1) ? n0llOO : n0l10O;
	assign		wire_n0Oi_dataout = (n1ii === 1'b1) ? n0li1i : n0lliO;
	assign		wire_n0Ol_dataout = (n1ii === 1'b1) ? n0li1l : n0llli;
	assign		wire_n0OO_dataout = (n1ii === 1'b1) ? n0li1O : n0llll;
	and(wire_n10ll_dataout, n1OOO, nlO11i);
	and(wire_n10lO_dataout, n011l, nlO11i);
	and(wire_n10Oi_dataout, n011O, nlO11i);
	and(wire_n10Ol_dataout, n010i, nlO11i);
	and(wire_n10OO_dataout, n010l, nlO11i);
	assign		wire_n1i_dataout = (n1ii === 1'b1) ? n0llli : n0li1l;
	and(wire_n1i0i_dataout, n01iO, nlO11i);
	and(wire_n1i0l_dataout, n01li, nlO11i);
	and(wire_n1i0O_dataout, n01ll, nlO11i);
	and(wire_n1i1i_dataout, n010O, nlO11i);
	and(wire_n1i1l_dataout, n01ii, nlO11i);
	and(wire_n1i1O_dataout, n01il, nlO11i);
	and(wire_n1iii_dataout, n01lO, nlO11i);
	and(wire_n1iil_dataout, n01Oi, nlO11i);
	and(wire_n1iiO_dataout, n01Ol, nlO11i);
	and(wire_n1ili_dataout, n01OO, nlO11i);
	and(wire_n1ill_dataout, n001i, nlO11i);
	and(wire_n1ilO_dataout, n001l, nlO11i);
	and(wire_n1iOi_dataout, n001O, nlO11i);
	and(wire_n1iOl_dataout, n000i, nlO11i);
	and(wire_n1iOO_dataout, n000l, nlO11i);
	assign		wire_n1l_dataout = (n1ii === 1'b1) ? n0llll : n0li1O;
	and(wire_n1l0i_dataout, n00iO, nlO11i);
	and(wire_n1l0l_dataout, n00li, nlO11i);
	and(wire_n1l0O_dataout, n00ll, nlO11i);
	and(wire_n1l1i_dataout, n000O, nlO11i);
	and(wire_n1l1l_dataout, n00ii, nlO11i);
	and(wire_n1l1O_dataout, n00il, nlO11i);
	assign		wire_n1li_dataout = (n1ii === 1'b1) ? n0l1Oi : n0li0O;
	and(wire_n1lii_dataout, n00lO, nlO11i);
	and(wire_n1lil_dataout, n00Oi, nlO11i);
	and(wire_n1liO_dataout, n00Ol, nlO11i);
	assign		wire_n1ll_dataout = (n1ii === 1'b1) ? n0l1Ol : n0liii;
	and(wire_n1lli_dataout, n00OO, nlO11i);
	and(wire_n1lll_dataout, n0i1i, nlO11i);
	and(wire_n1llO_dataout, n0i1l, nlO11i);
	assign		wire_n1lO_dataout = (n1ii === 1'b1) ? n0l1OO : n0liil;
	and(wire_n1lOi_dataout, n0i1O, nlO11i);
	and(wire_n1lOl_dataout, n0i0i, nlO11i);
	and(wire_n1lOO_dataout, n0i0l, nlO11i);
	assign		wire_n1O_dataout = (n1ii === 1'b1) ? n0lllO : n0li0i;
	and(wire_n1O0i_dataout, n0iiO, nlO11i);
	and(wire_n1O0l_dataout, n0ili, nlO11i);
	and(wire_n1O0O_dataout, n0ill, nlO11i);
	and(wire_n1O1i_dataout, n0i0O, nlO11i);
	and(wire_n1O1l_dataout, n0iii, nlO11i);
	and(wire_n1O1O_dataout, n0iil, nlO11i);
	assign		wire_n1Oi_dataout = (n1ii === 1'b1) ? n0l01i : n0liiO;
	and(wire_n1Oii_dataout, n0ilO, nlO11i);
	and(wire_n1Oil_dataout, n0iOi, nlO11i);
	and(wire_n1OiO_dataout, n0iOl, nlO11i);
	assign		wire_n1Ol_dataout = (n1ii === 1'b1) ? n0l01l : n0lili;
	and(wire_n1Oli_dataout, n0iOO, nlO11i);
	and(wire_n1Oll_dataout, n0l1i, nlO11i);
	and(wire_n1OlO_dataout, n0l1l, nlO11i);
	assign		wire_n1OO_dataout = (n1ii === 1'b1) ? n0l01O : n0lill;
	and(wire_n1OOi_dataout, n0l1O, nlO11i);
	and(wire_n1OOl_dataout, n0l0i, nlO11i);
	assign		wire_ni_dataout = (n1ii === 1'b1) ? n0lOii : n0l10i;
	assign		wire_ni0i_dataout = (n1ii === 1'b1) ? n0l10O : n0llOO;
	assign		wire_ni0l_dataout = (n1ii === 1'b1) ? n0l1ii : n0lO1i;
	assign		wire_ni0O_dataout = (n1ii === 1'b1) ? n0l1il : n0lO1l;
	assign		wire_ni1i_dataout = (n1ii === 1'b1) ? n0li0i : n0lllO;
	assign		wire_ni1l_dataout = (n1ii === 1'b1) ? n0li0l : n0llOi;
	assign		wire_ni1O_dataout = (n1ii === 1'b1) ? n0l10l : n0llOl;
	assign		wire_nii_dataout = (n1ii === 1'b1) ? n0lO1i : n0l1ii;
	assign		wire_niii_dataout = (n1ii === 1'b1) ? n0l1iO : n0lO1O;
	assign		wire_niil_dataout = (n1ii === 1'b1) ? n0l1li : n0lO0i;
	assign		wire_niiO_dataout = (n1ii === 1'b1) ? n0l1ll : n0lO0l;
	assign		wire_nil_dataout = (n1ii === 1'b1) ? n0lO1l : n0l1il;
	assign		wire_nili_dataout = (n1ii === 1'b1) ? n0l1lO : n0lO0O;
	assign		wire_nill_dataout = (n1ii === 1'b1) ? n0l10i : n0lOii;
	assign		wire_nilO_dataout = (n1ii === 1'b1) ? n0li0O : n0l1Oi;
	assign		wire_niO_dataout = (n1ii === 1'b1) ? n0lO1O : n0l1iO;
	assign		wire_niOi_dataout = (n1ii === 1'b1) ? n0liii : n0l1Ol;
	assign		wire_niOl_dataout = (n1ii === 1'b1) ? n0liil : n0l1OO;
	assign		wire_niOO_dataout = (n1ii === 1'b1) ? n0liiO : n0l01i;
	assign		wire_nl0i_dataout = (n1ii === 1'b1) ? n0liOi : n0l00l;
	assign		wire_nl0l_dataout = (n1ii === 1'b1) ? n0liOl : n0l00O;
	assign		wire_nl0O_dataout = (n1ii === 1'b1) ? n0liOO : n0l0ii;
	assign		wire_nl1i_dataout = (n1ii === 1'b1) ? n0lili : n0l01l;
	assign		wire_nl1l_dataout = (n1ii === 1'b1) ? n0lill : n0l01O;
	assign		wire_nl1O_dataout = (n1ii === 1'b1) ? n0lilO : n0l00i;
	assign		wire_nli_dataout = (n1ii === 1'b1) ? n0lO0i : n0l1li;
	and(wire_nli0ii_dataout, wire_nlil0i_o, (~ ni0ill));
	assign		wire_nli0il_dataout = ((~ ni0ill) === 1'b1) ? wire_nlil0l_o : wire_nlil0i_o;
	assign		wire_nli0iO_dataout = ((~ ni0ill) === 1'b1) ? wire_nlil0O_o : wire_nlil0l_o;
	assign		wire_nli0li_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilii_o : wire_nlil0O_o;
	assign		wire_nli0ll_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilil_o : wire_nlilii_o;
	assign		wire_nli0lO_dataout = ((~ ni0ill) === 1'b1) ? wire_nliliO_o : wire_nlilil_o;
	assign		wire_nli0Oi_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilli_o : wire_nliliO_o;
	assign		wire_nli0Ol_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilll_o : wire_nlilli_o;
	assign		wire_nli0OO_dataout = ((~ ni0ill) === 1'b1) ? wire_nlillO_o : wire_nlilll_o;
	assign		wire_nlii_dataout = (n1ii === 1'b1) ? n0ll1i : n0l0il;
	assign		wire_nlii0i_dataout = ((~ ni0ill) === 1'b1) ? wire_nliO1i_o : wire_nlilOO_o;
	assign		wire_nlii0l_dataout = ((~ ni0ill) === 1'b1) ? wire_nliO1l_o : wire_nliO1i_o;
	assign		wire_nlii0O_dataout = ((~ ni0ill) === 1'b1) ? wire_nliO1O_o : wire_nliO1l_o;
	assign		wire_nlii1i_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilOi_o : wire_nlillO_o;
	assign		wire_nlii1l_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilOl_o : wire_nlilOi_o;
	assign		wire_nlii1O_dataout = ((~ ni0ill) === 1'b1) ? wire_nlilOO_o : wire_nlilOl_o;
	assign		wire_nliiii_dataout = ((~ ni0ill) === 1'b1) ? wire_nliO0i_o : wire_nliO1O_o;
	assign		wire_nliiil_dataout = ((~ ni0ill) === 1'b1) ? wire_nliO0l_o : wire_nliO0i_o;
	assign		wire_nliiiO_dataout = ((~ ni0ill) === 1'b1) ? wire_nliO0O_o : wire_nliO0l_o;
	assign		wire_nliili_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOii_o : wire_nliO0O_o;
	assign		wire_nliill_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOil_o : wire_nliOii_o;
	assign		wire_nliilO_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOiO_o : wire_nliOil_o;
	assign		wire_nliiOi_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOli_o : wire_nliOiO_o;
	assign		wire_nliiOl_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOll_o : wire_nliOli_o;
	assign		wire_nliiOO_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOlO_o : wire_nliOll_o;
	assign		wire_nlil_dataout = (n1ii === 1'b1) ? n0ll1l : n0l0iO;
	assign		wire_nlil1i_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOOi_o : wire_nliOlO_o;
	assign		wire_nlil1l_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOOl_o : wire_nliOOi_o;
	assign		wire_nlil1O_dataout = ((~ ni0ill) === 1'b1) ? wire_nliOOO_o : wire_nliOOl_o;
	assign		wire_nliO_dataout = (n1ii === 1'b1) ? n0ll1O : n0l0li;
	assign		wire_nll_dataout = (n1ii === 1'b1) ? n0lO0l : n0l1ll;
	and(wire_nll0i_dataout, n0lOOO, (~ n0lOOi));
	and(wire_nll0l_dataout, n0O11i, (~ n0lOOi));
	and(wire_nll0O_dataout, n0O11l, (~ n0lOOi));
	and(wire_nll1O_dataout, n0lOOl, (~ n0lOOi));
	assign		wire_nlli_dataout = (n1ii === 1'b1) ? n0ll0i : n0l0ll;
	and(wire_nllii_dataout, n0O11O, (~ n0lOOi));
	and(wire_nllil_dataout, n0O10i, (~ n0lOOi));
	and(wire_nlliO_dataout, n0O10l, (~ n0lOOi));
	assign		wire_nlll_dataout = (n1ii === 1'b1) ? n0ll0l : n0l0lO;
	and(wire_nllli_dataout, n0O10O, (~ n0lOOi));
	and(wire_nllll_dataout, n0O1ii, (~ n0lOOi));
	assign		wire_nlllli_dataout = ((~ en[0]) === 1'b1) ? nli00l : nllliO;
	assign		wire_nlllll_dataout = ((~ en[0]) === 1'b1) ? nlllil : nllllO;
	and(wire_nlllO_dataout, n0O1il, (~ n0lOOi));
	assign		wire_nllO_dataout = (n1ii === 1'b1) ? n0ll0O : n0l0Oi;
	assign		wire_nllO0O_dataout = ((~ n0iOOi) === 1'b1) ? wire_nllOiO_dataout : wire_nllOii_dataout;
	and(wire_nllOi_dataout, n0O1iO, (~ n0lOOi));
	assign		wire_nllOii_dataout = ((~ n0iOOl) === 1'b1) ? nllOOi : nllO1O;
	assign		wire_nllOil_dataout = ((~ n0iOOl) === 1'b1) ? nllOOl : nllOli;
	assign		wire_nllOiO_dataout = ((~ n0iOOl) === 1'b1) ? nllOOO : nllOll;
	and(wire_nllOl_dataout, n0O1li, (~ n0lOOi));
	and(wire_nllOO_dataout, n0O1ll, (~ n0lOOi));
	assign		wire_nlO_dataout = (n1ii === 1'b1) ? n0lO0O : n0l1lO;
	assign		wire_nlO00i_dataout = ((~ ni1Oll) === 1'b1) ? ni0i0l : ni010l;
	assign		wire_nlO00l_dataout = ((~ ni1Oll) === 1'b1) ? ni0i0O : ni010O;
	assign		wire_nlO00O_dataout = ((~ ni1Oll) === 1'b1) ? ni0iii : ni01ii;
	assign		wire_nlO01i_dataout = ((~ ni1Oll) === 1'b1) ? ni0i1l : ni011l;
	assign		wire_nlO01l_dataout = ((~ ni1Oll) === 1'b1) ? ni0i1O : ni011O;
	assign		wire_nlO01O_dataout = ((~ ni1Oll) === 1'b1) ? ni0i0i : ni010i;
	and(wire_nlO0i_dataout, n0O1OO, (~ n0lOOi));
	assign		wire_nlO0ii_dataout = ((~ ni1Oll) === 1'b1) ? ni0iil : ni01il;
	assign		wire_nlO0il_dataout = ((~ ni1Oll) === 1'b1) ? ni0iiO : ni01iO;
	and(wire_nlO0l_dataout, n0O01i, (~ n0lOOi));
	and(wire_nlO0O_dataout, n0O01l, (~ n0lOOi));
	assign		wire_nlO10i_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO00i_dataout : wire_nlO1ll_dataout;
	assign		wire_nlO10l_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO00l_dataout : wire_nlO1lO_dataout;
	assign		wire_nlO10O_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO00O_dataout : wire_nlO1Oi_dataout;
	assign		wire_nlO11l_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO01l_dataout : wire_nlO1iO_dataout;
	assign		wire_nlO11O_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO01O_dataout : wire_nlO1li_dataout;
	and(wire_nlO1i_dataout, n0O1lO, (~ n0lOOi));
	assign		wire_nlO1ii_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO0ii_dataout : wire_nlO1Ol_dataout;
	assign		wire_nlO1il_dataout = ((~ n0iOOO) === 1'b1) ? wire_nlO0il_dataout : wire_nlO1OO_dataout;
	or(wire_nlO1iO_dataout, ni00li, ~((~ ni1Oll)));
	and(wire_nlO1l_dataout, n0O1Oi, (~ n0lOOi));
	or(wire_nlO1li_dataout, ni00ll, ~((~ ni1Oll)));
	or(wire_nlO1ll_dataout, ni00lO, ~((~ ni1Oll)));
	assign		wire_nlO1lO_dataout = ((~ ni1Oll) === 1'b1) ? ni00Oi : ni1OOi;
	and(wire_nlO1O_dataout, n0O1Ol, (~ n0lOOi));
	assign		wire_nlO1Oi_dataout = ((~ ni1Oll) === 1'b1) ? ni00Ol : ni1OOl;
	assign		wire_nlO1Ol_dataout = ((~ ni1Oll) === 1'b1) ? ni00OO : ni1OOO;
	assign		wire_nlO1OO_dataout = ((~ ni1Oll) === 1'b1) ? ni0i1i : ni011i;
	assign		wire_nlOi_dataout = (n1ii === 1'b1) ? n0llii : n0l0Ol;
	and(wire_nlOii_dataout, n0O01O, (~ n0lOOi));
	and(wire_nlOil_dataout, n0O00i, (~ n0lOOi));
	and(wire_nlOiO_dataout, n0O00l, (~ n0lOOi));
	assign		wire_nlOl_dataout = (n1ii === 1'b1) ? n0llil : n0l0OO;
	and(wire_nlOli_dataout, n0O00O, (~ n0lOOi));
	assign		wire_nlOO_dataout = (n1ii === 1'b1) ? n0lliO : n0li1i;
	assign		wire_nO_dataout = ((~ opSel[0]) === 1'b1) ? (~ b[31]) : b[31];
	oper_add   n011i
	( 
	.a({{2{1'b0}}, n10l, n10i, n11O, n11l, n11i, nlOOO, nlOOl, nlOOi, nlOll, 1'b1}),
	.b({{5{1'b1}}, {2{1'b0}}, {3{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n011i_o));
	defparam
		n011i.sgate_representation = 0,
		n011i.width_a = 12,
		n011i.width_b = 12,
		n011i.width_o = 12;
	oper_add   n1il
	( 
	.a({1'b0, wire_nili_dataout, wire_niiO_dataout, wire_niil_dataout, wire_niii_dataout, wire_ni0O_dataout, wire_ni0l_dataout, wire_ni0i_dataout, wire_ni1O_dataout, 1'b1}),
	.b({1'b1, (~ wire_nlO_dataout), (~ wire_nll_dataout), (~ wire_nli_dataout), (~ wire_niO_dataout), (~ wire_nil_dataout), (~ wire_nii_dataout), (~ wire_n0O_dataout), (~ wire_n0l_dataout), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1il_o));
	defparam
		n1il.sgate_representation = 0,
		n1il.width_a = 10,
		n1il.width_b = 10,
		n1il.width_o = 10;
	oper_add   nl
	( 
	.a({{2{1'b0}}, a[30:0], 1'b1}),
	.b({{2{1'b1}}, (~ b[30]), (~ b[29]), (~ b[28]), (~ b[27]), (~ b[26]), (~ b[25]), (~ b[24]), (~ b[23]), (~ b[22]), (~ b[21]), (~ b[20]), (~ b[19]), (~ b[18]), (~ b[17]), (~ b[16]), (~ b[15]), (~ b[14]), (~ b[13]), (~ b[12]), (~ b[11]), (~ b[10]), (~ b[9]), (~ b[8]), (~ b[7]), (~ b[6]), (~ b[5]), (~ b[4]), (~ b[3]), (~ b[2]), (~ b[1]), (~ b[0]), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl_o));
	defparam
		nl.sgate_representation = 0,
		nl.width_a = 34,
		nl.width_b = 34,
		nl.width_o = 34;
	oper_add   nl0OOO
	( 
	.a({1'b0, nli1iO, nli1il, nli1ii, nli10O, nli10l, nli10i, nli11O, nli11l, nli11i, nl0OOl, nilOil, nilOii, nilO0O, nilO0l, nilO0i, nilO1O, nilO1l, nilO1i, nillOO, nillOl, nillOi, nilllO, nillll, nillli, nilliO, nillil, nillii, nill0O, nill0l, nill0i, nill1O, nill1l, nill1i, niliOO}),
	.b({{34{1'b0}}, (~ niliOl)}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl0OOO_o));
	defparam
		nl0OOO.sgate_representation = 0,
		nl0OOO.width_a = 35,
		nl0OOO.width_b = 35,
		nl0OOO.width_o = 35;
	oper_add   nli00O
	( 
	.a({1'b0, ni0OlO, ni0Oll, ni0Oli, ni0OiO, ni0Oil, ni0Oii, ni0O0O, ni0O0l}),
	.b({{8{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli00O_o));
	defparam
		nli00O.sgate_representation = 0,
		nli00O.width_a = 9,
		nli00O.width_b = 9,
		nli00O.width_o = 9;
	oper_add   nli1ll
	( 
	.a({1'b0, nli00i, nli01O, nli01l, nli01i, nli1OO, nli1Ol, nli1Oi, nli1lO, nli1li, 1'b1}),
	.b({{5{1'b1}}, (~ ni0iOO), (~ ni0iOl), (~ ni0iOi), (~ ni0ilO), (~ ni0ill), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli1ll_o));
	defparam
		nli1ll.sgate_representation = 0,
		nli1ll.width_a = 11,
		nli1ll.width_b = 11,
		nli1ll.width_o = 11;
	oper_add   nlllOO
	( 
	.a({nllllO, nllliO}),
	.b({1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlllOO_o));
	defparam
		nlllOO.sgate_representation = 0,
		nlllOO.width_a = 2,
		nlllOO.width_b = 2,
		nlllOO.width_o = 2;
	oper_add   nlO0iO
	( 
	.a({{2{1'b0}}, 1'b1, n0OOli, n0OOiO, n0OOil, n0OOii, n0OO0O, n0OO0l, n0OO0i, n0OO1O, n0OO1l, n0OO1i, n0OlOO, n0OlOl, n0OlOi, n0OllO, n0Olll, n0Olli, n0OliO, n0Olil, n0Olii, n0Ol0O, n0Ol0l, n0Ol0i, n0Ol1O, 1'b0, (n0lOlO & ni1ilO)}),
	.b({1'b0, n0lOlO, (n0lOlO ^ n0Ol1l), (n0lOlO ^ n0Ol1i), (n0lOlO ^ n0OiOO), (n0lOlO ^ n0OiOl), (n0lOlO ^ n0OiOi), (n0lOlO ^ n0OilO), (n0lOlO ^ n0Oill), (n0lOlO ^ n0Oili), (n0lOlO ^ n0OiiO), (n0lOlO ^ n0Oiil), (n0lOlO ^ n0Oiii), (n0lOlO ^ n0Oi0O), (n0lOlO ^ n0Oi0l), (n0lOlO ^ n0Oi0i), (n0lOlO ^ n0Oi1O), (n0lOlO ^ n0Oi1l), (n0lOlO ^ n0Oi1i), (n0lOlO ^ n0O0OO), (n0lOlO ^ n0O0Ol), (n0lOlO ^ n0O0Oi), (n0lOlO ^ n0O0lO), (n0lOlO ^ n0O0ll), (n0lOlO ^ n0O0li), (n0lOlO ^ n0O0iO), (n0lOlO ^ n0O0il), (n0lOlO ^ n0O0ii)}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlO0iO_o));
	defparam
		nlO0iO.sgate_representation = 0,
		nlO0iO.width_a = 28,
		nlO0iO.width_b = 28,
		nlO0iO.width_o = 28;
	oper_add   nlOlO
	( 
	.a({{2{1'b1}}, (~ n10l), (~ n10i), (~ n11O), (~ n11l), (~ n11i), (~ nlOOO), (~ nlOOl), (~ nlOOi), (~ nlOll), 1'b1}),
	.b({{6{1'b0}}, {2{1'b1}}, {2{1'b0}}, {2{1'b1}}}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlOlO_o));
	defparam
		nlOlO.sgate_representation = 0,
		nlOlO.width_a = 12,
		nlOlO.width_b = 12,
		nlOlO.width_o = 12;
	oper_mux   n0l0O
	( 
	.data({wire_ni0Oi_o, wire_ni0lO_o, wire_ni0ll_o, wire_ni0li_o}),
	.o(wire_n0l0O_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0l0O.width_data = 4,
		n0l0O.width_sel = 2;
	oper_mux   n0lii
	( 
	.data({wire_ni0Ol_o, wire_ni0Oi_o, wire_ni0lO_o, wire_ni0ll_o}),
	.o(wire_n0lii_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lii.width_data = 4,
		n0lii.width_sel = 2;
	oper_mux   n0lil
	( 
	.data({wire_ni0OO_o, wire_ni0Ol_o, wire_ni0Oi_o, wire_ni0lO_o}),
	.o(wire_n0lil_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lil.width_data = 4,
		n0lil.width_sel = 2;
	oper_mux   n0liO
	( 
	.data({wire_nii1i_o, wire_ni0OO_o, wire_ni0Ol_o, wire_ni0Oi_o}),
	.o(wire_n0liO_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0liO.width_data = 4,
		n0liO.width_sel = 2;
	oper_mux   n0lli
	( 
	.data({wire_nii1l_o, wire_nii1i_o, wire_ni0OO_o, wire_ni0Ol_o}),
	.o(wire_n0lli_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lli.width_data = 4,
		n0lli.width_sel = 2;
	oper_mux   n0lll
	( 
	.data({wire_nii1O_o, wire_nii1l_o, wire_nii1i_o, wire_ni0OO_o}),
	.o(wire_n0lll_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lll.width_data = 4,
		n0lll.width_sel = 2;
	oper_mux   n0llO
	( 
	.data({wire_nii0i_o, wire_nii1O_o, wire_nii1l_o, wire_nii1i_o}),
	.o(wire_n0llO_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0llO.width_data = 4,
		n0llO.width_sel = 2;
	oper_mux   n0lOi
	( 
	.data({wire_nii0l_o, wire_nii0i_o, wire_nii1O_o, wire_nii1l_o}),
	.o(wire_n0lOi_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lOi.width_data = 4,
		n0lOi.width_sel = 2;
	oper_mux   n0lOl
	( 
	.data({wire_nii0O_o, wire_nii0l_o, wire_nii0i_o, wire_nii1O_o}),
	.o(wire_n0lOl_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lOl.width_data = 4,
		n0lOl.width_sel = 2;
	oper_mux   n0lOO
	( 
	.data({wire_niiii_o, wire_nii0O_o, wire_nii0l_o, wire_nii0i_o}),
	.o(wire_n0lOO_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0lOO.width_data = 4,
		n0lOO.width_sel = 2;
	oper_mux   n0O0i
	( 
	.data({wire_niill_o, wire_niili_o, wire_niiiO_o, wire_niiil_o}),
	.o(wire_n0O0i_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0O0i.width_data = 4,
		n0O0i.width_sel = 2;
	oper_mux   n0O0l
	( 
	.data({wire_niilO_o, wire_niill_o, wire_niili_o, wire_niiiO_o}),
	.o(wire_n0O0l_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0O0l.width_data = 4,
		n0O0l.width_sel = 2;
	oper_mux   n0O0O
	( 
	.data({wire_niiOi_o, wire_niilO_o, wire_niill_o, wire_niili_o}),
	.o(wire_n0O0O_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0O0O.width_data = 4,
		n0O0O.width_sel = 2;
	oper_mux   n0O1i
	( 
	.data({wire_niiil_o, wire_niiii_o, wire_nii0O_o, wire_nii0l_o}),
	.o(wire_n0O1i_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0O1i.width_data = 4,
		n0O1i.width_sel = 2;
	oper_mux   n0O1l
	( 
	.data({wire_niiiO_o, wire_niiil_o, wire_niiii_o, wire_nii0O_o}),
	.o(wire_n0O1l_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0O1l.width_data = 4,
		n0O1l.width_sel = 2;
	oper_mux   n0O1O
	( 
	.data({wire_niili_o, wire_niiiO_o, wire_niiil_o, wire_niiii_o}),
	.o(wire_n0O1O_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0O1O.width_data = 4,
		n0O1O.width_sel = 2;
	oper_mux   n0Oii
	( 
	.data({wire_niiOl_o, wire_niiOi_o, wire_niilO_o, wire_niill_o}),
	.o(wire_n0Oii_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0Oii.width_data = 4,
		n0Oii.width_sel = 2;
	oper_mux   n0Oil
	( 
	.data({wire_niiOO_o, wire_niiOl_o, wire_niiOi_o, wire_niilO_o}),
	.o(wire_n0Oil_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0Oil.width_data = 4,
		n0Oil.width_sel = 2;
	oper_mux   n0OiO
	( 
	.data({wire_nil1i_o, wire_niiOO_o, wire_niiOl_o, wire_niiOi_o}),
	.o(wire_n0OiO_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0OiO.width_data = 4,
		n0OiO.width_sel = 2;
	oper_mux   n0Oli
	( 
	.data({wire_nil1l_o, wire_nil1i_o, wire_niiOO_o, wire_niiOl_o}),
	.o(wire_n0Oli_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0Oli.width_data = 4,
		n0Oli.width_sel = 2;
	oper_mux   n0Oll
	( 
	.data({wire_nil1O_o, wire_nil1l_o, wire_nil1i_o, wire_niiOO_o}),
	.o(wire_n0Oll_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0Oll.width_data = 4,
		n0Oll.width_sel = 2;
	oper_mux   n0OlO
	( 
	.data({wire_nil0i_o, wire_nil1O_o, wire_nil1l_o, wire_nil1i_o}),
	.o(wire_n0OlO_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0OlO.width_data = 4,
		n0OlO.width_sel = 2;
	oper_mux   n0OOi
	( 
	.data({wire_nil0l_o, wire_nil0i_o, wire_nil1O_o, wire_nil1l_o}),
	.o(wire_n0OOi_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0OOi.width_data = 4,
		n0OOi.width_sel = 2;
	oper_mux   n0OOl
	( 
	.data({wire_nil0O_o, wire_nil0l_o, wire_nil0i_o, wire_nil1O_o}),
	.o(wire_n0OOl_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0OOl.width_data = 4,
		n0OOl.width_sel = 2;
	oper_mux   n0OOO
	( 
	.data({wire_nilii_o, wire_nil0O_o, wire_nil0l_o, wire_nil0i_o}),
	.o(wire_n0OOO_o),
	.sel({nlOOi, nlOll}));
	defparam
		n0OOO.width_data = 4,
		n0OOO.width_sel = 2;
	oper_mux   ni00i
	( 
	.data({wire_niOll_o, wire_niOli_o, wire_niOiO_o, wire_niOil_o}),
	.o(wire_ni00i_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni00i.width_data = 4,
		ni00i.width_sel = 2;
	oper_mux   ni00l
	( 
	.data({wire_niOlO_o, wire_niOll_o, wire_niOli_o, wire_niOiO_o}),
	.o(wire_ni00l_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni00l.width_data = 4,
		ni00l.width_sel = 2;
	oper_mux   ni00O
	( 
	.data({wire_niOOi_o, wire_niOlO_o, wire_niOll_o, wire_niOli_o}),
	.o(wire_ni00O_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni00O.width_data = 4,
		ni00O.width_sel = 2;
	oper_mux   ni01i
	( 
	.data({wire_niOil_o, wire_niOii_o, wire_niO0O_o, wire_niO0l_o}),
	.o(wire_ni01i_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni01i.width_data = 4,
		ni01i.width_sel = 2;
	oper_mux   ni01l
	( 
	.data({wire_niOiO_o, wire_niOil_o, wire_niOii_o, wire_niO0O_o}),
	.o(wire_ni01l_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni01l.width_data = 4,
		ni01l.width_sel = 2;
	oper_mux   ni01O
	( 
	.data({wire_niOli_o, wire_niOiO_o, wire_niOil_o, wire_niOii_o}),
	.o(wire_ni01O_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni01O.width_data = 4,
		ni01O.width_sel = 2;
	oper_mux   ni0ii
	( 
	.data({1'b0, wire_niOOi_o, wire_niOlO_o, wire_niOll_o}),
	.o(wire_ni0ii_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni0ii.width_data = 4,
		ni0ii.width_sel = 2;
	oper_mux   ni0il
	( 
	.data({{2{1'b0}}, wire_niOOi_o, wire_niOlO_o}),
	.o(wire_ni0il_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni0il.width_data = 4,
		ni0il.width_sel = 2;
	oper_mux   ni0iO
	( 
	.data({{3{1'b0}}, wire_niOOi_o}),
	.o(wire_ni0iO_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni0iO.width_data = 4,
		ni0iO.width_sel = 2;
	oper_mux   ni0li
	( 
	.data({wire_nl1ll_o, wire_nl1ii_o, wire_nl11O_o, wire_niOOl_o}),
	.o(wire_ni0li_o),
	.sel({nlOOO, nlOOl}));
	defparam
		ni0li.width_data = 4,
		ni0li.width_sel = 2;
	oper_mux   ni0ll
	( 
	.data({wire_nl1lO_o, wire_nl1il_o, wire_nl10i_o, wire_niOOO_o}),
	.o(wire_ni0ll_o),
	.sel({nlOOO, nlOOl}));
	defparam
		ni0ll.width_data = 4,
		ni0ll.width_sel = 2;
	oper_mux   ni0lO
	( 
	.data({wire_nl1Oi_o, wire_nl1iO_o, wire_nl10l_o, wire_nl11i_o}),
	.o(wire_ni0lO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		ni0lO.width_data = 4,
		ni0lO.width_sel = 2;
	oper_mux   ni0Oi
	( 
	.data({wire_nl1Ol_o, wire_nl1li_o, wire_nl10O_o, wire_nl11l_o}),
	.o(wire_ni0Oi_o),
	.sel({nlOOO, nlOOl}));
	defparam
		ni0Oi.width_data = 4,
		ni0Oi.width_sel = 2;
	oper_mux   ni0Ol
	( 
	.data({wire_nl1OO_o, wire_nl1ll_o, wire_nl1ii_o, wire_nl11O_o}),
	.o(wire_ni0Ol_o),
	.sel({nlOOO, nlOOl}));
	defparam
		ni0Ol.width_data = 4,
		ni0Ol.width_sel = 2;
	oper_mux   ni0OO
	( 
	.data({wire_nl01i_o, wire_nl1lO_o, wire_nl1il_o, wire_nl10i_o}),
	.o(wire_ni0OO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		ni0OO.width_data = 4,
		ni0OO.width_sel = 2;
	oper_mux   ni10i
	( 
	.data({wire_nilll_o, wire_nilli_o, wire_niliO_o, wire_nilil_o}),
	.o(wire_ni10i_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni10i.width_data = 4,
		ni10i.width_sel = 2;
	oper_mux   ni10l
	( 
	.data({wire_nillO_o, wire_nilll_o, wire_nilli_o, wire_niliO_o}),
	.o(wire_ni10l_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni10l.width_data = 4,
		ni10l.width_sel = 2;
	oper_mux   ni10O
	( 
	.data({wire_nilOi_o, wire_nillO_o, wire_nilll_o, wire_nilli_o}),
	.o(wire_ni10O_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni10O.width_data = 4,
		ni10O.width_sel = 2;
	oper_mux   ni11i
	( 
	.data({wire_nilil_o, wire_nilii_o, wire_nil0O_o, wire_nil0l_o}),
	.o(wire_ni11i_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni11i.width_data = 4,
		ni11i.width_sel = 2;
	oper_mux   ni11l
	( 
	.data({wire_niliO_o, wire_nilil_o, wire_nilii_o, wire_nil0O_o}),
	.o(wire_ni11l_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni11l.width_data = 4,
		ni11l.width_sel = 2;
	oper_mux   ni11O
	( 
	.data({wire_nilli_o, wire_niliO_o, wire_nilil_o, wire_nilii_o}),
	.o(wire_ni11O_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni11O.width_data = 4,
		ni11O.width_sel = 2;
	oper_mux   ni1ii
	( 
	.data({wire_nilOl_o, wire_nilOi_o, wire_nillO_o, wire_nilll_o}),
	.o(wire_ni1ii_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1ii.width_data = 4,
		ni1ii.width_sel = 2;
	oper_mux   ni1il
	( 
	.data({wire_nilOO_o, wire_nilOl_o, wire_nilOi_o, wire_nillO_o}),
	.o(wire_ni1il_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1il.width_data = 4,
		ni1il.width_sel = 2;
	oper_mux   ni1iO
	( 
	.data({wire_niO1i_o, wire_nilOO_o, wire_nilOl_o, wire_nilOi_o}),
	.o(wire_ni1iO_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1iO.width_data = 4,
		ni1iO.width_sel = 2;
	oper_mux   ni1li
	( 
	.data({wire_niO1l_o, wire_niO1i_o, wire_nilOO_o, wire_nilOl_o}),
	.o(wire_ni1li_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1li.width_data = 4,
		ni1li.width_sel = 2;
	oper_mux   ni1ll
	( 
	.data({wire_niO1O_o, wire_niO1l_o, wire_niO1i_o, wire_nilOO_o}),
	.o(wire_ni1ll_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1ll.width_data = 4,
		ni1ll.width_sel = 2;
	oper_mux   ni1lO
	( 
	.data({wire_niO0i_o, wire_niO1O_o, wire_niO1l_o, wire_niO1i_o}),
	.o(wire_ni1lO_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1lO.width_data = 4,
		ni1lO.width_sel = 2;
	oper_mux   ni1Oi
	( 
	.data({wire_niO0l_o, wire_niO0i_o, wire_niO1O_o, wire_niO1l_o}),
	.o(wire_ni1Oi_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1Oi.width_data = 4,
		ni1Oi.width_sel = 2;
	oper_mux   ni1Ol
	( 
	.data({wire_niO0O_o, wire_niO0l_o, wire_niO0i_o, wire_niO1O_o}),
	.o(wire_ni1Ol_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1Ol.width_data = 4,
		ni1Ol.width_sel = 2;
	oper_mux   ni1OO
	( 
	.data({wire_niOii_o, wire_niO0O_o, wire_niO0l_o, wire_niO0i_o}),
	.o(wire_ni1OO_o),
	.sel({nlOOi, nlOll}));
	defparam
		ni1OO.width_data = 4,
		ni1OO.width_sel = 2;
	oper_mux   nii0i
	( 
	.data({wire_nl00l_o, wire_nl01i_o, wire_nl1lO_o, wire_nl1il_o}),
	.o(wire_nii0i_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nii0i.width_data = 4,
		nii0i.width_sel = 2;
	oper_mux   nii0l
	( 
	.data({wire_nl00O_o, wire_nl01l_o, wire_nl1Oi_o, wire_nl1iO_o}),
	.o(wire_nii0l_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nii0l.width_data = 4,
		nii0l.width_sel = 2;
	oper_mux   nii0O
	( 
	.data({wire_nl0ii_o, wire_nl01O_o, wire_nl1Ol_o, wire_nl1li_o}),
	.o(wire_nii0O_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nii0O.width_data = 4,
		nii0O.width_sel = 2;
	oper_mux   nii1i
	( 
	.data({wire_nl01l_o, wire_nl1Oi_o, wire_nl1iO_o, wire_nl10l_o}),
	.o(wire_nii1i_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nii1i.width_data = 4,
		nii1i.width_sel = 2;
	oper_mux   nii1l
	( 
	.data({wire_nl01O_o, wire_nl1Ol_o, wire_nl1li_o, wire_nl10O_o}),
	.o(wire_nii1l_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nii1l.width_data = 4,
		nii1l.width_sel = 2;
	oper_mux   nii1O
	( 
	.data({wire_nl00i_o, wire_nl1OO_o, wire_nl1ll_o, wire_nl1ii_o}),
	.o(wire_nii1O_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nii1O.width_data = 4,
		nii1O.width_sel = 2;
	oper_mux   niiii
	( 
	.data({wire_nl0il_o, wire_nl00i_o, wire_nl1OO_o, wire_nl1ll_o}),
	.o(wire_niiii_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niiii.width_data = 4,
		niiii.width_sel = 2;
	oper_mux   niiil
	( 
	.data({wire_nl0iO_o, wire_nl00l_o, wire_nl01i_o, wire_nl1lO_o}),
	.o(wire_niiil_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niiil.width_data = 4,
		niiil.width_sel = 2;
	oper_mux   niiiO
	( 
	.data({wire_nl0li_o, wire_nl00O_o, wire_nl01l_o, wire_nl1Oi_o}),
	.o(wire_niiiO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niiiO.width_data = 4,
		niiiO.width_sel = 2;
	oper_mux   niili
	( 
	.data({wire_nl0ll_o, wire_nl0ii_o, wire_nl01O_o, wire_nl1Ol_o}),
	.o(wire_niili_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niili.width_data = 4,
		niili.width_sel = 2;
	oper_mux   niill
	( 
	.data({wire_nl0lO_o, wire_nl0il_o, wire_nl00i_o, wire_nl1OO_o}),
	.o(wire_niill_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niill.width_data = 4,
		niill.width_sel = 2;
	oper_mux   niilO
	( 
	.data({wire_nl0Oi_o, wire_nl0iO_o, wire_nl00l_o, wire_nl01i_o}),
	.o(wire_niilO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niilO.width_data = 4,
		niilO.width_sel = 2;
	oper_mux   niiOi
	( 
	.data({wire_nl0Ol_o, wire_nl0li_o, wire_nl00O_o, wire_nl01l_o}),
	.o(wire_niiOi_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niiOi.width_data = 4,
		niiOi.width_sel = 2;
	oper_mux   niiOl
	( 
	.data({wire_nl0OO_o, wire_nl0ll_o, wire_nl0ii_o, wire_nl01O_o}),
	.o(wire_niiOl_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niiOl.width_data = 4,
		niiOl.width_sel = 2;
	oper_mux   niiOO
	( 
	.data({wire_nli1i_o, wire_nl0lO_o, wire_nl0il_o, wire_nl00i_o}),
	.o(wire_niiOO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niiOO.width_data = 4,
		niiOO.width_sel = 2;
	oper_mux   nil0i
	( 
	.data({wire_nli0l_o, wire_nli1i_o, wire_nl0lO_o, wire_nl0il_o}),
	.o(wire_nil0i_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nil0i.width_data = 4,
		nil0i.width_sel = 2;
	oper_mux   nil0l
	( 
	.data({wire_nli0O_o, wire_nli1l_o, wire_nl0Oi_o, wire_nl0iO_o}),
	.o(wire_nil0l_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nil0l.width_data = 4,
		nil0l.width_sel = 2;
	oper_mux   nil0O
	( 
	.data({wire_nliii_o, wire_nli1O_o, wire_nl0Ol_o, wire_nl0li_o}),
	.o(wire_nil0O_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nil0O.width_data = 4,
		nil0O.width_sel = 2;
	oper_mux   nil1i
	( 
	.data({wire_nli1l_o, wire_nl0Oi_o, wire_nl0iO_o, wire_nl00l_o}),
	.o(wire_nil1i_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nil1i.width_data = 4,
		nil1i.width_sel = 2;
	oper_mux   nil1l
	( 
	.data({wire_nli1O_o, wire_nl0Ol_o, wire_nl0li_o, wire_nl00O_o}),
	.o(wire_nil1l_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nil1l.width_data = 4,
		nil1l.width_sel = 2;
	oper_mux   nil1O
	( 
	.data({wire_nli0i_o, wire_nl0OO_o, wire_nl0ll_o, wire_nl0ii_o}),
	.o(wire_nil1O_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nil1O.width_data = 4,
		nil1O.width_sel = 2;
	oper_mux   nilii
	( 
	.data({wire_nliil_o, wire_nli0i_o, wire_nl0OO_o, wire_nl0ll_o}),
	.o(wire_nilii_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilii.width_data = 4,
		nilii.width_sel = 2;
	oper_mux   nilil
	( 
	.data({wire_nliiO_o, wire_nli0l_o, wire_nli1i_o, wire_nl0lO_o}),
	.o(wire_nilil_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilil.width_data = 4,
		nilil.width_sel = 2;
	oper_mux   niliO
	( 
	.data({wire_nlili_o, wire_nli0O_o, wire_nli1l_o, wire_nl0Oi_o}),
	.o(wire_niliO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niliO.width_data = 4,
		niliO.width_sel = 2;
	oper_mux   nilli
	( 
	.data({wire_nlill_o, wire_nliii_o, wire_nli1O_o, wire_nl0Ol_o}),
	.o(wire_nilli_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilli.width_data = 4,
		nilli.width_sel = 2;
	oper_mux   nilll
	( 
	.data({wire_nlilO_o, wire_nliil_o, wire_nli0i_o, wire_nl0OO_o}),
	.o(wire_nilll_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilll.width_data = 4,
		nilll.width_sel = 2;
	oper_mux   nillO
	( 
	.data({wire_nliOi_o, wire_nliiO_o, wire_nli0l_o, wire_nli1i_o}),
	.o(wire_nillO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nillO.width_data = 4,
		nillO.width_sel = 2;
	oper_mux   nilOi
	( 
	.data({wire_nliOl_o, wire_nlili_o, wire_nli0O_o, wire_nli1l_o}),
	.o(wire_nilOi_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilOi.width_data = 4,
		nilOi.width_sel = 2;
	oper_mux   nilOl
	( 
	.data({wire_nliOO_o, wire_nlill_o, wire_nliii_o, wire_nli1O_o}),
	.o(wire_nilOl_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilOl.width_data = 4,
		nilOl.width_sel = 2;
	oper_mux   nilOO
	( 
	.data({wire_nll1i_o, wire_nlilO_o, wire_nliil_o, wire_nli0i_o}),
	.o(wire_nilOO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		nilOO.width_data = 4,
		nilOO.width_sel = 2;
	oper_mux   niO0i
	( 
	.data({1'b0, wire_nll1i_o, wire_nlilO_o, wire_nliil_o}),
	.o(wire_niO0i_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niO0i.width_data = 4,
		niO0i.width_sel = 2;
	oper_mux   niO0l
	( 
	.data({1'b0, wire_nll1l_o, wire_nliOi_o, wire_nliiO_o}),
	.o(wire_niO0l_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niO0l.width_data = 4,
		niO0l.width_sel = 2;
	oper_mux   niO0O
	( 
	.data({{2{1'b0}}, wire_nliOl_o, wire_nlili_o}),
	.o(wire_niO0O_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niO0O.width_data = 4,
		niO0O.width_sel = 2;
	oper_mux   niO1i
	( 
	.data({wire_nll1l_o, wire_nliOi_o, wire_nliiO_o, wire_nli0l_o}),
	.o(wire_niO1i_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niO1i.width_data = 4,
		niO1i.width_sel = 2;
	oper_mux   niO1l
	( 
	.data({1'b0, wire_nliOl_o, wire_nlili_o, wire_nli0O_o}),
	.o(wire_niO1l_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niO1l.width_data = 4,
		niO1l.width_sel = 2;
	oper_mux   niO1O
	( 
	.data({1'b0, wire_nliOO_o, wire_nlill_o, wire_nliii_o}),
	.o(wire_niO1O_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niO1O.width_data = 4,
		niO1O.width_sel = 2;
	oper_mux   niOii
	( 
	.data({{2{1'b0}}, wire_nliOO_o, wire_nlill_o}),
	.o(wire_niOii_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOii.width_data = 4,
		niOii.width_sel = 2;
	oper_mux   niOil
	( 
	.data({{2{1'b0}}, wire_nll1i_o, wire_nlilO_o}),
	.o(wire_niOil_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOil.width_data = 4,
		niOil.width_sel = 2;
	oper_mux   niOiO
	( 
	.data({{2{1'b0}}, wire_nll1l_o, wire_nliOi_o}),
	.o(wire_niOiO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOiO.width_data = 4,
		niOiO.width_sel = 2;
	oper_mux   niOli
	( 
	.data({{3{1'b0}}, wire_nliOl_o}),
	.o(wire_niOli_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOli.width_data = 4,
		niOli.width_sel = 2;
	oper_mux   niOll
	( 
	.data({{3{1'b0}}, wire_nliOO_o}),
	.o(wire_niOll_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOll.width_data = 4,
		niOll.width_sel = 2;
	oper_mux   niOlO
	( 
	.data({{3{1'b0}}, wire_nll1i_o}),
	.o(wire_niOlO_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOlO.width_data = 4,
		niOlO.width_sel = 2;
	oper_mux   niOOi
	( 
	.data({{3{1'b0}}, wire_nll1l_o}),
	.o(wire_niOOi_o),
	.sel({nlOOO, nlOOl}));
	defparam
		niOOi.width_data = 4,
		niOOi.width_sel = 2;
	oper_mux   niOOl
	( 
	.data({(~ n0lOOi), wire_nllli_dataout, {2{1'b0}}}),
	.o(wire_niOOl_o),
	.sel({n11l, n11i}));
	defparam
		niOOl.width_data = 4,
		niOOl.width_sel = 2;
	oper_mux   niOOO
	( 
	.data({1'b0, wire_nllll_dataout, {2{1'b0}}}),
	.o(wire_niOOO_o),
	.sel({n11l, n11i}));
	defparam
		niOOO.width_data = 4,
		niOOO.width_sel = 2;
	oper_mux   nl000i
	( 
	.data({{2{1'b0}}, niO0Ol, 1'b0}),
	.o(wire_nl000i_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl000i.width_data = 4,
		nl000i.width_sel = 2;
	oper_mux   nl000l
	( 
	.data({{2{1'b0}}, niO0OO, 1'b0}),
	.o(wire_nl000l_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl000l.width_data = 4,
		nl000l.width_sel = 2;
	oper_mux   nl000O
	( 
	.data({{2{1'b0}}, niOi1i, 1'b0}),
	.o(wire_nl000O_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl000O.width_data = 4,
		nl000O.width_sel = 2;
	oper_mux   nl001i
	( 
	.data({{2{1'b0}}, niO0ll, 1'b0}),
	.o(wire_nl001i_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl001i.width_data = 4,
		nl001i.width_sel = 2;
	oper_mux   nl001l
	( 
	.data({{2{1'b0}}, niO0lO, 1'b0}),
	.o(wire_nl001l_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl001l.width_data = 4,
		nl001l.width_sel = 2;
	oper_mux   nl001O
	( 
	.data({{2{1'b0}}, niO0Oi, 1'b0}),
	.o(wire_nl001O_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl001O.width_data = 4,
		nl001O.width_sel = 2;
	oper_mux   nl00i
	( 
	.data({{2{1'b0}}, wire_nllOl_dataout, 1'b0}),
	.o(wire_nl00i_o),
	.sel({n11l, n11i}));
	defparam
		nl00i.width_data = 4,
		nl00i.width_sel = 2;
	oper_mux   nl00ii
	( 
	.data({{2{1'b0}}, niOi1l, 1'b0}),
	.o(wire_nl00ii_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00ii.width_data = 4,
		nl00ii.width_sel = 2;
	oper_mux   nl00il
	( 
	.data({{2{1'b0}}, niOi1O, 1'b0}),
	.o(wire_nl00il_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00il.width_data = 4,
		nl00il.width_sel = 2;
	oper_mux   nl00iO
	( 
	.data({{2{1'b1}}, nilOiO, 1'b0}),
	.o(wire_nl00iO_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00iO.width_data = 4,
		nl00iO.width_sel = 2;
	oper_mux   nl00l
	( 
	.data({{2{1'b0}}, wire_nllOO_dataout, 1'b0}),
	.o(wire_nl00l_o),
	.sel({n11l, n11i}));
	defparam
		nl00l.width_data = 4,
		nl00l.width_sel = 2;
	oper_mux   nl00li
	( 
	.data({{2{1'b1}}, nilOli, 1'b0}),
	.o(wire_nl00li_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00li.width_data = 4,
		nl00li.width_sel = 2;
	oper_mux   nl00ll
	( 
	.data({{2{1'b1}}, nilOll, 1'b0}),
	.o(wire_nl00ll_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00ll.width_data = 4,
		nl00ll.width_sel = 2;
	oper_mux   nl00lO
	( 
	.data({{2{1'b1}}, nilOlO, 1'b0}),
	.o(wire_nl00lO_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00lO.width_data = 4,
		nl00lO.width_sel = 2;
	oper_mux   nl00O
	( 
	.data({{2{1'b0}}, wire_nlO1i_dataout, 1'b0}),
	.o(wire_nl00O_o),
	.sel({n11l, n11i}));
	defparam
		nl00O.width_data = 4,
		nl00O.width_sel = 2;
	oper_mux   nl00Oi
	( 
	.data({{2{1'b1}}, nilOOi, 1'b0}),
	.o(wire_nl00Oi_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00Oi.width_data = 4,
		nl00Oi.width_sel = 2;
	oper_mux   nl00Ol
	( 
	.data({{2{1'b1}}, nilOOl, 1'b0}),
	.o(wire_nl00Ol_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00Ol.width_data = 4,
		nl00Ol.width_sel = 2;
	oper_mux   nl00OO
	( 
	.data({{2{1'b1}}, nilOOO, 1'b0}),
	.o(wire_nl00OO_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl00OO.width_data = 4,
		nl00OO.width_sel = 2;
	oper_mux   nl010i
	( 
	.data({{2{1'b0}}, niO1Ol, 1'b0}),
	.o(wire_nl010i_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl010i.width_data = 4,
		nl010i.width_sel = 2;
	oper_mux   nl010l
	( 
	.data({{2{1'b0}}, niO1OO, 1'b0}),
	.o(wire_nl010l_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl010l.width_data = 4,
		nl010l.width_sel = 2;
	oper_mux   nl010O
	( 
	.data({{2{1'b0}}, niO01i, 1'b0}),
	.o(wire_nl010O_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl010O.width_data = 4,
		nl010O.width_sel = 2;
	oper_mux   nl011i
	( 
	.data({1'b1, 1'b0, niO1ll, 1'b0}),
	.o(wire_nl011i_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl011i.width_data = 4,
		nl011i.width_sel = 2;
	oper_mux   nl011l
	( 
	.data({{2{1'b0}}, niO1lO, 1'b0}),
	.o(wire_nl011l_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl011l.width_data = 4,
		nl011l.width_sel = 2;
	oper_mux   nl011O
	( 
	.data({{2{1'b0}}, niO1Oi, 1'b0}),
	.o(wire_nl011O_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl011O.width_data = 4,
		nl011O.width_sel = 2;
	oper_mux   nl01i
	( 
	.data({{2{1'b0}}, wire_nllll_dataout, 1'b0}),
	.o(wire_nl01i_o),
	.sel({n11l, n11i}));
	defparam
		nl01i.width_data = 4,
		nl01i.width_sel = 2;
	oper_mux   nl01ii
	( 
	.data({{2{1'b0}}, niO01l, 1'b0}),
	.o(wire_nl01ii_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01ii.width_data = 4,
		nl01ii.width_sel = 2;
	oper_mux   nl01il
	( 
	.data({{2{1'b0}}, niO01O, 1'b0}),
	.o(wire_nl01il_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01il.width_data = 4,
		nl01il.width_sel = 2;
	oper_mux   nl01iO
	( 
	.data({{2{1'b0}}, niO00i, 1'b0}),
	.o(wire_nl01iO_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01iO.width_data = 4,
		nl01iO.width_sel = 2;
	oper_mux   nl01l
	( 
	.data({{2{1'b0}}, wire_nlllO_dataout, 1'b0}),
	.o(wire_nl01l_o),
	.sel({n11l, n11i}));
	defparam
		nl01l.width_data = 4,
		nl01l.width_sel = 2;
	oper_mux   nl01li
	( 
	.data({{2{1'b0}}, niO00l, 1'b0}),
	.o(wire_nl01li_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01li.width_data = 4,
		nl01li.width_sel = 2;
	oper_mux   nl01ll
	( 
	.data({{2{1'b0}}, niO00O, 1'b0}),
	.o(wire_nl01ll_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01ll.width_data = 4,
		nl01ll.width_sel = 2;
	oper_mux   nl01lO
	( 
	.data({{2{1'b0}}, niO0ii, 1'b0}),
	.o(wire_nl01lO_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01lO.width_data = 4,
		nl01lO.width_sel = 2;
	oper_mux   nl01O
	( 
	.data({{2{1'b0}}, wire_nllOi_dataout, 1'b0}),
	.o(wire_nl01O_o),
	.sel({n11l, n11i}));
	defparam
		nl01O.width_data = 4,
		nl01O.width_sel = 2;
	oper_mux   nl01Oi
	( 
	.data({{2{1'b0}}, niO0il, 1'b0}),
	.o(wire_nl01Oi_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01Oi.width_data = 4,
		nl01Oi.width_sel = 2;
	oper_mux   nl01Ol
	( 
	.data({{2{1'b0}}, niO0iO, 1'b0}),
	.o(wire_nl01Ol_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01Ol.width_data = 4,
		nl01Ol.width_sel = 2;
	oper_mux   nl01OO
	( 
	.data({{2{1'b0}}, niO0li, 1'b0}),
	.o(wire_nl01OO_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl01OO.width_data = 4,
		nl01OO.width_sel = 2;
	oper_mux   nl0i0l
	( 
	.data({{3{1'b0}}, {2{1'b1}}, {6{1'b0}}, {2{1'b1}}, {6{1'b0}}, {2{1'b1}}, {7{1'b0}}, 1'b1, {3{1'b0}}}),
	.o(wire_nl0i0l_o),
	.sel({niO10l, (nl0OOi | n0iOii), niO11O, niO1ii, niO1iO}));
	defparam
		nl0i0l.width_data = 32,
		nl0i0l.width_sel = 5;
	oper_mux   nl0i1i
	( 
	.data({{2{1'b1}}, niO11i, 1'b0}),
	.o(wire_nl0i1i_o),
	.sel({wire_nl0i1O_o, wire_nl0i1l_o}));
	defparam
		nl0i1i.width_data = 4,
		nl0i1i.width_sel = 2;
	oper_mux   nl0i1l
	( 
	.data({{4{1'b1}}, {3{1'b0}}, 1'b1}),
	.o(wire_nl0i1l_o),
	.sel({n0iOil, wire_nl0iil_o, nl0iii}));
	defparam
		nl0i1l.width_data = 8,
		nl0i1l.width_sel = 3;
	oper_mux   nl0i1O
	( 
	.data({{3{1'b1}}, 1'b0}),
	.o(wire_nl0i1O_o),
	.sel({n0iOil, wire_nl0iil_o}));
	defparam
		nl0i1O.width_data = 4,
		nl0i1O.width_sel = 2;
	oper_mux   nl0ii
	( 
	.data({{2{1'b0}}, wire_nlO1l_dataout, 1'b0}),
	.o(wire_nl0ii_o),
	.sel({n11l, n11i}));
	defparam
		nl0ii.width_data = 4,
		nl0ii.width_sel = 2;
	oper_mux   nl0iil
	( 
	.data({{31{1'b0}}, 1'b1, {25{1'b0}}, {5{1'b1}}, {2{1'b0}}}),
	.o(wire_nl0iil_o),
	.sel({niO10i, nii0li, nii0Oi, niiiii, niiili, nii0OO}));
	defparam
		nl0iil.width_data = 64,
		nl0iil.width_sel = 6;
	oper_mux   nl0il
	( 
	.data({{2{1'b0}}, wire_nlO1O_dataout, 1'b0}),
	.o(wire_nl0il_o),
	.sel({n11l, n11i}));
	defparam
		nl0il.width_data = 4,
		nl0il.width_sel = 2;
	oper_mux   nl0iO
	( 
	.data({{2{1'b0}}, wire_nlO0i_dataout, wire_nll1O_dataout}),
	.o(wire_nl0iO_o),
	.sel({n11l, n11i}));
	defparam
		nl0iO.width_data = 4,
		nl0iO.width_sel = 2;
	oper_mux   nl0li
	( 
	.data({{2{1'b0}}, wire_nlO0l_dataout, wire_nll0i_dataout}),
	.o(wire_nl0li_o),
	.sel({n11l, n11i}));
	defparam
		nl0li.width_data = 4,
		nl0li.width_sel = 2;
	oper_mux   nl0ll
	( 
	.data({{2{1'b0}}, wire_nlO0O_dataout, wire_nll0l_dataout}),
	.o(wire_nl0ll_o),
	.sel({n11l, n11i}));
	defparam
		nl0ll.width_data = 4,
		nl0ll.width_sel = 2;
	oper_mux   nl0lO
	( 
	.data({{2{1'b0}}, wire_nlOii_dataout, wire_nll0O_dataout}),
	.o(wire_nl0lO_o),
	.sel({n11l, n11i}));
	defparam
		nl0lO.width_data = 4,
		nl0lO.width_sel = 2;
	oper_mux   nl0Oi
	( 
	.data({{2{1'b0}}, wire_nlOil_dataout, wire_nllii_dataout}),
	.o(wire_nl0Oi_o),
	.sel({n11l, n11i}));
	defparam
		nl0Oi.width_data = 4,
		nl0Oi.width_sel = 2;
	oper_mux   nl0Ol
	( 
	.data({{2{1'b0}}, wire_nlOiO_dataout, wire_nllil_dataout}),
	.o(wire_nl0Ol_o),
	.sel({n11l, n11i}));
	defparam
		nl0Ol.width_data = 4,
		nl0Ol.width_sel = 2;
	oper_mux   nl0OO
	( 
	.data({{2{1'b0}}, wire_nlOli_dataout, wire_nlliO_dataout}),
	.o(wire_nl0OO_o),
	.sel({n11l, n11i}));
	defparam
		nl0OO.width_data = 4,
		nl0OO.width_sel = 2;
	oper_mux   nl10i
	( 
	.data({1'b0, wire_nllOO_dataout, {2{1'b0}}}),
	.o(wire_nl10i_o),
	.sel({n11l, n11i}));
	defparam
		nl10i.width_data = 4,
		nl10i.width_sel = 2;
	oper_mux   nl10l
	( 
	.data({1'b0, wire_nlO1i_dataout, {2{1'b0}}}),
	.o(wire_nl10l_o),
	.sel({n11l, n11i}));
	defparam
		nl10l.width_data = 4,
		nl10l.width_sel = 2;
	oper_mux   nl10O
	( 
	.data({1'b0, wire_nlO1l_dataout, {2{1'b0}}}),
	.o(wire_nl10O_o),
	.sel({n11l, n11i}));
	defparam
		nl10O.width_data = 4,
		nl10O.width_sel = 2;
	oper_mux   nl11i
	( 
	.data({1'b0, wire_nlllO_dataout, {2{1'b0}}}),
	.o(wire_nl11i_o),
	.sel({n11l, n11i}));
	defparam
		nl11i.width_data = 4,
		nl11i.width_sel = 2;
	oper_mux   nl11l
	( 
	.data({1'b0, wire_nllOi_dataout, {2{1'b0}}}),
	.o(wire_nl11l_o),
	.sel({n11l, n11i}));
	defparam
		nl11l.width_data = 4,
		nl11l.width_sel = 2;
	oper_mux   nl11O
	( 
	.data({1'b0, wire_nllOl_dataout, {2{1'b0}}}),
	.o(wire_nl11O_o),
	.sel({n11l, n11i}));
	defparam
		nl11O.width_data = 4,
		nl11O.width_sel = 2;
	oper_mux   nl1ii
	( 
	.data({1'b0, wire_nlO1O_dataout, {2{1'b0}}}),
	.o(wire_nl1ii_o),
	.sel({n11l, n11i}));
	defparam
		nl1ii.width_data = 4,
		nl1ii.width_sel = 2;
	oper_mux   nl1il
	( 
	.data({1'b0, wire_nlO0i_dataout, wire_nll1O_dataout, 1'b0}),
	.o(wire_nl1il_o),
	.sel({n11l, n11i}));
	defparam
		nl1il.width_data = 4,
		nl1il.width_sel = 2;
	oper_mux   nl1iO
	( 
	.data({1'b0, wire_nlO0l_dataout, wire_nll0i_dataout, 1'b0}),
	.o(wire_nl1iO_o),
	.sel({n11l, n11i}));
	defparam
		nl1iO.width_data = 4,
		nl1iO.width_sel = 2;
	oper_mux   nl1li
	( 
	.data({1'b0, wire_nlO0O_dataout, wire_nll0l_dataout, 1'b0}),
	.o(wire_nl1li_o),
	.sel({n11l, n11i}));
	defparam
		nl1li.width_data = 4,
		nl1li.width_sel = 2;
	oper_mux   nl1ll
	( 
	.data({1'b0, wire_nlOii_dataout, wire_nll0O_dataout, 1'b0}),
	.o(wire_nl1ll_o),
	.sel({n11l, n11i}));
	defparam
		nl1ll.width_data = 4,
		nl1ll.width_sel = 2;
	oper_mux   nl1lO
	( 
	.data({1'b0, wire_nlOil_dataout, wire_nllii_dataout, 1'b0}),
	.o(wire_nl1lO_o),
	.sel({n11l, n11i}));
	defparam
		nl1lO.width_data = 4,
		nl1lO.width_sel = 2;
	oper_mux   nl1Oi
	( 
	.data({1'b0, wire_nlOiO_dataout, wire_nllil_dataout, 1'b0}),
	.o(wire_nl1Oi_o),
	.sel({n11l, n11i}));
	defparam
		nl1Oi.width_data = 4,
		nl1Oi.width_sel = 2;
	oper_mux   nl1Ol
	( 
	.data({1'b0, wire_nlOli_dataout, wire_nlliO_dataout, 1'b0}),
	.o(wire_nl1Ol_o),
	.sel({n11l, n11i}));
	defparam
		nl1Ol.width_data = 4,
		nl1Ol.width_sel = 2;
	oper_mux   nl1OO
	( 
	.data({1'b0, (~ n0lOOi), wire_nllli_dataout, 1'b0}),
	.o(wire_nl1OO_o),
	.sel({n11l, n11i}));
	defparam
		nl1OO.width_data = 4,
		nl1OO.width_sel = 2;
	oper_mux   nli0i
	( 
	.data({{3{1'b0}}, wire_nllOi_dataout}),
	.o(wire_nli0i_o),
	.sel({n11l, n11i}));
	defparam
		nli0i.width_data = 4,
		nli0i.width_sel = 2;
	oper_mux   nli0l
	( 
	.data({{3{1'b0}}, wire_nllOl_dataout}),
	.o(wire_nli0l_o),
	.sel({n11l, n11i}));
	defparam
		nli0l.width_data = 4,
		nli0l.width_sel = 2;
	oper_mux   nli0O
	( 
	.data({{3{1'b0}}, wire_nllOO_dataout}),
	.o(wire_nli0O_o),
	.sel({n11l, n11i}));
	defparam
		nli0O.width_data = 4,
		nli0O.width_sel = 2;
	oper_mux   nli1i
	( 
	.data({{2{1'b0}}, (~ n0lOOi), wire_nllli_dataout}),
	.o(wire_nli1i_o),
	.sel({n11l, n11i}));
	defparam
		nli1i.width_data = 4,
		nli1i.width_sel = 2;
	oper_mux   nli1l
	( 
	.data({{3{1'b0}}, wire_nllll_dataout}),
	.o(wire_nli1l_o),
	.sel({n11l, n11i}));
	defparam
		nli1l.width_data = 4,
		nli1l.width_sel = 2;
	oper_mux   nli1O
	( 
	.data({{3{1'b0}}, wire_nlllO_dataout}),
	.o(wire_nli1O_o),
	.sel({n11l, n11i}));
	defparam
		nli1O.width_data = 4,
		nli1O.width_sel = 2;
	oper_mux   nliii
	( 
	.data({{3{1'b0}}, wire_nlO1i_dataout}),
	.o(wire_nliii_o),
	.sel({n11l, n11i}));
	defparam
		nliii.width_data = 4,
		nliii.width_sel = 2;
	oper_mux   nliil
	( 
	.data({{3{1'b0}}, wire_nlO1l_dataout}),
	.o(wire_nliil_o),
	.sel({n11l, n11i}));
	defparam
		nliil.width_data = 4,
		nliil.width_sel = 2;
	oper_mux   nliiO
	( 
	.data({{3{1'b0}}, wire_nlO1O_dataout}),
	.o(wire_nliiO_o),
	.sel({n11l, n11i}));
	defparam
		nliiO.width_data = 4,
		nliiO.width_sel = 2;
	oper_mux   nlil0i
	( 
	.data({{3{1'b0}}, wire_nll11i_o}),
	.o(wire_nlil0i_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlil0i.width_data = 4,
		nlil0i.width_sel = 2;
	oper_mux   nlil0l
	( 
	.data({{3{1'b0}}, wire_nll11l_o}),
	.o(wire_nlil0l_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlil0l.width_data = 4,
		nlil0l.width_sel = 2;
	oper_mux   nlil0O
	( 
	.data({{2{1'b0}}, wire_nll11i_o, wire_nll11O_o}),
	.o(wire_nlil0O_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlil0O.width_data = 4,
		nlil0O.width_sel = 2;
	oper_mux   nlili
	( 
	.data({{3{1'b0}}, wire_nlO0i_dataout}),
	.o(wire_nlili_o),
	.sel({n11l, n11i}));
	defparam
		nlili.width_data = 4,
		nlili.width_sel = 2;
	oper_mux   nlilii
	( 
	.data({{2{1'b0}}, wire_nll11l_o, wire_nll10i_o}),
	.o(wire_nlilii_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilii.width_data = 4,
		nlilii.width_sel = 2;
	oper_mux   nlilil
	( 
	.data({1'b0, wire_nll11i_o, wire_nll11O_o, wire_nll10l_o}),
	.o(wire_nlilil_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilil.width_data = 4,
		nlilil.width_sel = 2;
	oper_mux   nliliO
	( 
	.data({1'b0, wire_nll11l_o, wire_nll10i_o, wire_nll10O_o}),
	.o(wire_nliliO_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliliO.width_data = 4,
		nliliO.width_sel = 2;
	oper_mux   nlill
	( 
	.data({{3{1'b0}}, wire_nlO0l_dataout}),
	.o(wire_nlill_o),
	.sel({n11l, n11i}));
	defparam
		nlill.width_data = 4,
		nlill.width_sel = 2;
	oper_mux   nlilli
	( 
	.data({wire_nll11i_o, wire_nll11O_o, wire_nll10l_o, wire_nll1ii_o}),
	.o(wire_nlilli_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilli.width_data = 4,
		nlilli.width_sel = 2;
	oper_mux   nlilll
	( 
	.data({wire_nll11l_o, wire_nll10i_o, wire_nll10O_o, wire_nll1il_o}),
	.o(wire_nlilll_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilll.width_data = 4,
		nlilll.width_sel = 2;
	oper_mux   nlillO
	( 
	.data({wire_nll11O_o, wire_nll10l_o, wire_nll1ii_o, wire_nll1iO_o}),
	.o(wire_nlillO_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlillO.width_data = 4,
		nlillO.width_sel = 2;
	oper_mux   nlilO
	( 
	.data({{3{1'b0}}, wire_nlO0O_dataout}),
	.o(wire_nlilO_o),
	.sel({n11l, n11i}));
	defparam
		nlilO.width_data = 4,
		nlilO.width_sel = 2;
	oper_mux   nlilOi
	( 
	.data({wire_nll10i_o, wire_nll10O_o, wire_nll1il_o, wire_nll1li_o}),
	.o(wire_nlilOi_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilOi.width_data = 4,
		nlilOi.width_sel = 2;
	oper_mux   nlilOl
	( 
	.data({wire_nll10l_o, wire_nll1ii_o, wire_nll1iO_o, wire_nll1ll_o}),
	.o(wire_nlilOl_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilOl.width_data = 4,
		nlilOl.width_sel = 2;
	oper_mux   nlilOO
	( 
	.data({wire_nll10O_o, wire_nll1il_o, wire_nll1li_o, wire_nll1lO_o}),
	.o(wire_nlilOO_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nlilOO.width_data = 4,
		nlilOO.width_sel = 2;
	oper_mux   nliO0i
	( 
	.data({wire_nll1li_o, wire_nll1lO_o, wire_nll1Ol_o, wire_nll01i_o}),
	.o(wire_nliO0i_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliO0i.width_data = 4,
		nliO0i.width_sel = 2;
	oper_mux   nliO0l
	( 
	.data({wire_nll1ll_o, wire_nll1Oi_o, wire_nll1OO_o, wire_nll01l_o}),
	.o(wire_nliO0l_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliO0l.width_data = 4,
		nliO0l.width_sel = 2;
	oper_mux   nliO0O
	( 
	.data({wire_nll1lO_o, wire_nll1Ol_o, wire_nll01i_o, wire_nll01O_o}),
	.o(wire_nliO0O_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliO0O.width_data = 4,
		nliO0O.width_sel = 2;
	oper_mux   nliO1i
	( 
	.data({wire_nll1ii_o, wire_nll1iO_o, wire_nll1ll_o, wire_nll1Oi_o}),
	.o(wire_nliO1i_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliO1i.width_data = 4,
		nliO1i.width_sel = 2;
	oper_mux   nliO1l
	( 
	.data({wire_nll1il_o, wire_nll1li_o, wire_nll1lO_o, wire_nll1Ol_o}),
	.o(wire_nliO1l_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliO1l.width_data = 4,
		nliO1l.width_sel = 2;
	oper_mux   nliO1O
	( 
	.data({wire_nll1iO_o, wire_nll1ll_o, wire_nll1Oi_o, wire_nll1OO_o}),
	.o(wire_nliO1O_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliO1O.width_data = 4,
		nliO1O.width_sel = 2;
	oper_mux   nliOi
	( 
	.data({{3{1'b0}}, wire_nlOii_dataout}),
	.o(wire_nliOi_o),
	.sel({n11l, n11i}));
	defparam
		nliOi.width_data = 4,
		nliOi.width_sel = 2;
	oper_mux   nliOii
	( 
	.data({wire_nll1Oi_o, wire_nll1OO_o, wire_nll01l_o, wire_nll00i_o}),
	.o(wire_nliOii_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOii.width_data = 4,
		nliOii.width_sel = 2;
	oper_mux   nliOil
	( 
	.data({wire_nll1Ol_o, wire_nll01i_o, wire_nll01O_o, wire_nll00l_o}),
	.o(wire_nliOil_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOil.width_data = 4,
		nliOil.width_sel = 2;
	oper_mux   nliOiO
	( 
	.data({wire_nll1OO_o, wire_nll01l_o, wire_nll00i_o, wire_nll00O_o}),
	.o(wire_nliOiO_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOiO.width_data = 4,
		nliOiO.width_sel = 2;
	oper_mux   nliOl
	( 
	.data({{3{1'b0}}, wire_nlOil_dataout}),
	.o(wire_nliOl_o),
	.sel({n11l, n11i}));
	defparam
		nliOl.width_data = 4,
		nliOl.width_sel = 2;
	oper_mux   nliOli
	( 
	.data({wire_nll01i_o, wire_nll01O_o, wire_nll00l_o, wire_nll0ii_o}),
	.o(wire_nliOli_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOli.width_data = 4,
		nliOli.width_sel = 2;
	oper_mux   nliOll
	( 
	.data({wire_nll01l_o, wire_nll00i_o, wire_nll00O_o, wire_nll0il_o}),
	.o(wire_nliOll_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOll.width_data = 4,
		nliOll.width_sel = 2;
	oper_mux   nliOlO
	( 
	.data({wire_nll01O_o, wire_nll00l_o, wire_nll0ii_o, wire_nll0iO_o}),
	.o(wire_nliOlO_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOlO.width_data = 4,
		nliOlO.width_sel = 2;
	oper_mux   nliOO
	( 
	.data({{3{1'b0}}, wire_nlOiO_dataout}),
	.o(wire_nliOO_o),
	.sel({n11l, n11i}));
	defparam
		nliOO.width_data = 4,
		nliOO.width_sel = 2;
	oper_mux   nliOOi
	( 
	.data({wire_nll00i_o, wire_nll00O_o, wire_nll0il_o, wire_nll0li_o}),
	.o(wire_nliOOi_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOOi.width_data = 4,
		nliOOi.width_sel = 2;
	oper_mux   nliOOl
	( 
	.data({wire_nll00l_o, wire_nll0ii_o, wire_nll0iO_o, wire_nll0ll_o}),
	.o(wire_nliOOl_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOOl.width_data = 4,
		nliOOl.width_sel = 2;
	oper_mux   nliOOO
	( 
	.data({wire_nll00O_o, wire_nll0il_o, wire_nll0li_o, wire_nll0lO_o}),
	.o(wire_nliOOO_o),
	.sel({ni0iOi, ni0ilO}));
	defparam
		nliOOO.width_data = 4,
		nliOOO.width_sel = 2;
	oper_mux   nll00i
	( 
	.data({1'b0, niiiOO, niiOOO, nil1il}),
	.o(wire_nll00i_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll00i.width_data = 4,
		nll00i.width_sel = 2;
	oper_mux   nll00l
	( 
	.data({1'b0, niil1i, nil11i, nil1iO}),
	.o(wire_nll00l_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll00l.width_data = 4,
		nll00l.width_sel = 2;
	oper_mux   nll00O
	( 
	.data({1'b0, niil1l, nil11l, nil1li}),
	.o(wire_nll00O_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll00O.width_data = 4,
		nll00O.width_sel = 2;
	oper_mux   nll01i
	( 
	.data({{2{1'b0}}, niiOlO, nil10l}),
	.o(wire_nll01i_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll01i.width_data = 4,
		nll01i.width_sel = 2;
	oper_mux   nll01l
	( 
	.data({1'b0, niiiOi, niiOOi, nil10O}),
	.o(wire_nll01l_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll01l.width_data = 4,
		nll01l.width_sel = 2;
	oper_mux   nll01O
	( 
	.data({1'b0, niiiOl, niiOOl, nil1ii}),
	.o(wire_nll01O_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll01O.width_data = 4,
		nll01O.width_sel = 2;
	oper_mux   nll0ii
	( 
	.data({1'b0, niil1O, nil11O, nil1ll}),
	.o(wire_nll0ii_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll0ii.width_data = 4,
		nll0ii.width_sel = 2;
	oper_mux   nll0il
	( 
	.data({1'b0, niil0i, nil10i, nil1lO}),
	.o(wire_nll0il_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll0il.width_data = 4,
		nll0il.width_sel = 2;
	oper_mux   nll0iO
	( 
	.data({1'b0, niil0l, nil10l, nil1Oi}),
	.o(wire_nll0iO_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll0iO.width_data = 4,
		nll0iO.width_sel = 2;
	oper_mux   nll0li
	( 
	.data({niiO0l, niil0O, nil10O, nil1Ol}),
	.o(wire_nll0li_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll0li.width_data = 4,
		nll0li.width_sel = 2;
	oper_mux   nll0ll
	( 
	.data({niiO0O, niilii, nil1ii, nil1OO}),
	.o(wire_nll0ll_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll0ll.width_data = 4,
		nll0ll.width_sel = 2;
	oper_mux   nll0lO
	( 
	.data({niiOii, niilil, nil1il, nil01i}),
	.o(wire_nll0lO_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll0lO.width_data = 4,
		nll0lO.width_sel = 2;
	oper_mux   nll10i
	( 
	.data({{3{1'b0}}, niiOil}),
	.o(wire_nll10i_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll10i.width_data = 4,
		nll10i.width_sel = 2;
	oper_mux   nll10l
	( 
	.data({{3{1'b0}}, niiOiO}),
	.o(wire_nll10l_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll10l.width_data = 4,
		nll10l.width_sel = 2;
	oper_mux   nll10O
	( 
	.data({{3{1'b0}}, niiOli}),
	.o(wire_nll10O_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll10O.width_data = 4,
		nll10O.width_sel = 2;
	oper_mux   nll11i
	( 
	.data({{3{1'b0}}, niiO0l}),
	.o(wire_nll11i_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll11i.width_data = 4,
		nll11i.width_sel = 2;
	oper_mux   nll11l
	( 
	.data({{3{1'b0}}, niiO0O}),
	.o(wire_nll11l_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll11l.width_data = 4,
		nll11l.width_sel = 2;
	oper_mux   nll11O
	( 
	.data({{3{1'b0}}, niiOii}),
	.o(wire_nll11O_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll11O.width_data = 4,
		nll11O.width_sel = 2;
	oper_mux   nll1i
	( 
	.data({{3{1'b0}}, wire_nlOli_dataout}),
	.o(wire_nll1i_o),
	.sel({n11l, n11i}));
	defparam
		nll1i.width_data = 4,
		nll1i.width_sel = 2;
	oper_mux   nll1ii
	( 
	.data({{3{1'b0}}, niiOll}),
	.o(wire_nll1ii_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1ii.width_data = 4,
		nll1ii.width_sel = 2;
	oper_mux   nll1il
	( 
	.data({{3{1'b0}}, niiOlO}),
	.o(wire_nll1il_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1il.width_data = 4,
		nll1il.width_sel = 2;
	oper_mux   nll1iO
	( 
	.data({{2{1'b0}}, niiO0l, niiOOi}),
	.o(wire_nll1iO_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1iO.width_data = 4,
		nll1iO.width_sel = 2;
	oper_mux   nll1l
	( 
	.data({{3{1'b0}}, (~ n0lOOi)}),
	.o(wire_nll1l_o),
	.sel({n11l, n11i}));
	defparam
		nll1l.width_data = 4,
		nll1l.width_sel = 2;
	oper_mux   nll1li
	( 
	.data({{2{1'b0}}, niiO0O, niiOOl}),
	.o(wire_nll1li_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1li.width_data = 4,
		nll1li.width_sel = 2;
	oper_mux   nll1ll
	( 
	.data({{2{1'b0}}, niiOii, niiOOO}),
	.o(wire_nll1ll_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1ll.width_data = 4,
		nll1ll.width_sel = 2;
	oper_mux   nll1lO
	( 
	.data({{2{1'b0}}, niiOil, nil11i}),
	.o(wire_nll1lO_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1lO.width_data = 4,
		nll1lO.width_sel = 2;
	oper_mux   nll1Oi
	( 
	.data({{2{1'b0}}, niiOiO, nil11l}),
	.o(wire_nll1Oi_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1Oi.width_data = 4,
		nll1Oi.width_sel = 2;
	oper_mux   nll1Ol
	( 
	.data({{2{1'b0}}, niiOli, nil11O}),
	.o(wire_nll1Ol_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1Ol.width_data = 4,
		nll1Ol.width_sel = 2;
	oper_mux   nll1OO
	( 
	.data({{2{1'b0}}, niiOll, nil10i}),
	.o(wire_nll1OO_o),
	.sel({ni0iOO, ni0iOl}));
	defparam
		nll1OO.width_data = 4,
		nll1OO.width_sel = 2;
	assign
		n0illl = ((((((((((~ nl0OOi) & (~ nl0OlO)) & nl0Oll) & nl0Oli) & nl0OiO) & nl0Oil) & nl0Oii) & nl0O0O) & nl0O0l) & nl0O0i),
		n0illO = (((((~ wire_nli0ll_dataout) & wire_nli0li_dataout) & (~ wire_nli0iO_dataout)) & (~ wire_nli0il_dataout)) & (~ wire_nli0ii_dataout)),
		n0ilOi = (((((((((((((((((((((((~ n0OOli) & (~ n0OOiO)) & (~ n0OOil)) & (~ n0OOii)) & (~ n0OO0O)) & (~ n0OO0l)) & (~ n0OO0i)) & (~ n0OO1O)) & (~ n0OO1l)) & (~ n0OO1i)) & (~ n0OlOO)) & (~ n0OlOl)) & (~ n0OlOi)) & (~ n0OllO)) & (~ n0Olll)) & (~ n0Olli)) & (~ n0OliO)) & (~ n0Olil)) & (~ n0Olii)) & (~ n0Ol0O)) & (~ n0Ol0l)) & (~ n0Ol0i)) & (~ n0Ol1O)),
		n0ilOl = (((((((((((((((((((((((~ n0O00O) & (~ n0O00l)) & (~ n0O00i)) & (~ n0O01O)) & (~ n0O01l)) & (~ n0O01i)) & (~ n0O1OO)) & (~ n0O1Ol)) & (~ n0O1Oi)) & (~ n0O1lO)) & (~ n0O1ll)) & (~ n0O1li)) & (~ n0O1iO)) & (~ n0O1il)) & (~ n0O1ii)) & (~ n0O10O)) & (~ n0O10l)) & (~ n0O10i)) & (~ n0O11O)) & (~ n0O11l)) & (~ n0O11i)) & (~ n0lOOO)) & (~ n0lOOl)),
		n0ilOO = ((((((((~ ni0OlO) & (~ ni0Oll)) & (~ ni0Oli)) & (~ ni0OiO)) & (~ ni0Oil)) & (~ ni0Oii)) & (~ ni0O0O)) & (~ ni0O0l)),
		n0iO0i = ((((((((((((((((~ ni1OiO) & (~ ni1Oil)) & (~ ni1Oii)) & (~ ni1O0O)) & (~ ni1O0l)) & (~ ni1O0i)) & (~ ni1O1O)) & (~ ni1O1l)) & (~ ni1O1i)) & (~ ni1lOO)) & (~ ni1lOl)) & (~ ni1lOi)) & (~ ni1llO)) & (~ ni1lll)) & (~ ni1lli)) & (~ ni1liO)),
		n0iO0l = (((((((((((((((((((((((~ ((~ n0l0l) & wire_n10ll_dataout)) & (~ ((~ n0l0l) & wire_n10lO_dataout))) & (~ ((~ n0l0l) & wire_n10Oi_dataout))) & (~ ((~ n0l0l) & wire_n10Ol_dataout))) & (~ ((~ n0l0l) & wire_n10OO_dataout))) & (~ ((~ n0l0l) & wire_n1i1i_dataout))) & (~ ((~ n0l0l) & wire_n1i1l_dataout))) & (~ ((~ n0l0l) & wire_n1i1O_dataout))) & (~ ((~ n0l0l) & wire_n1i0i_dataout))) & (~ ((~ n0l0l) & wire_n1i0l_dataout))) & (~ ((~ n0l0l) & wire_n1i0O_dataout))) & (~ ((~ n0l0l) & wire_n1iii_dataout))) & (~ ((~ n0l0l) & wire_n1iil_dataout))) & (~ ((~ n0l0l) & wire_n1iiO_dataout))) & (~ ((~ n0l0l) & wire_n1ili_dataout))) & (~ ((~ n0l0l) & wire_n1ill_dataout))) & (~ ((~ n0l0l) & wire_n1ilO_dataout))) & (~ ((~ n0l0l) & wire_n1iOi_dataout))) & (~ ((~ n0l0l) & wire_n1iOl_dataout))) & (~ ((~ n0l0l) & wire_n1iOO_dataout))) & (~ ((~ n0l0l) & wire_n1l1i_dataout))) & (~ ((~ n0l0l) & wire_n1l1l_dataout))) & (~ ((~ n0l0l) & wire_n1l1O_dataout))),
		n0iO0O = ((((((((~ wire_nlO_dataout) & (~ wire_nll_dataout)) & (~ wire_nli_dataout)) & (~ wire_niO_dataout)) & (~ wire_nil_dataout)) & (~ wire_nii_dataout)) & (~ wire_n0O_dataout)) & (~ wire_n0l_dataout)),
		n0iO1i = (((((((ni0OlO & ni0Oll) & ni0Oli) & ni0OiO) & ni0Oil) & ni0Oii) & ni0O0O) & ni0O0l),
		n0iO1l = (((((((wire_nlO_dataout & wire_nll_dataout) & wire_nli_dataout) & wire_niO_dataout) & wire_nil_dataout) & wire_nii_dataout) & wire_n0O_dataout) & wire_n0l_dataout),
		n0iO1O = ((((ni0iOO & ni0iOl) & ni0iOi) & (~ ni0ilO)) & (~ ni0ill)),
		n0iOii = ((((((((((~ nl0OOi) & (~ nl0OlO)) & (~ nl0Oll)) & (~ nl0Oli)) & (~ nl0OiO)) & (~ nl0Oil)) & (~ nl0Oii)) & (~ nl0O0O)) & (~ nl0O0l)) & (~ nl0O0i)),
		n0iOil = ((nii0li | nii0Oi) | ((niiiii & niiili) & nii0OO)),
		n0iOiO = (ni0OOi & nii01O),
		n0iOli = (ni0lii & nii1lO),
		n0iOll = ((~ ni0OOi) & (~ ni0OOl)),
		n0iOlO = ((~ ni0lii) & ni0lOi),
		n0iOOi = ((~ wire_nllOiO_dataout) & (~ wire_nllOil_dataout)),
		n0iOOl = ((((~ nllOOO) & (~ nllOOl)) & (~ nllOOi)) & (~ nllOlO)),
		n0iOOO = ((((((((~ wire_nlO0il_dataout) & (~ wire_nlO0ii_dataout)) & (~ wire_nlO00O_dataout)) & (~ wire_nlO00l_dataout)) & (~ wire_nlO00i_dataout)) & (~ wire_nlO01O_dataout)) & (~ wire_nlO01l_dataout)) & (~ wire_nlO01i_dataout)),
		n0l11i = 1'b1,
		q = {((~ n0iOil) & nii0ii), wire_nl0i1i_o, wire_nl00OO_o, wire_nl00Ol_o, wire_nl00Oi_o, wire_nl00lO_o, wire_nl00ll_o, wire_nl00li_o, wire_nl00iO_o, wire_nl00il_o, wire_nl00ii_o, wire_nl000O_o, wire_nl000l_o, wire_nl000i_o, wire_nl001O_o, wire_nl001l_o, wire_nl001i_o, wire_nl01OO_o, wire_nl01Ol_o, wire_nl01Oi_o, wire_nl01lO_o, wire_nl01ll_o, wire_nl01li_o, wire_nl01iO_o, wire_nl01il_o, wire_nl01ii_o, wire_nl010O_o, wire_nl010l_o, wire_nl010i_o, wire_nl011O_o, wire_nl011l_o, wire_nl011i_o};
endmodule //fp_addsub_mxcyc
//synopsys translate_on
//VALID FILE
